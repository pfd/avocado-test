{
  "openapi": "3.0.1",
  "info": {
    "title": "SkyPoint Platform",
    "description": "Give your users control over their personal data to build trust. Automate data privacy compliance including CCPA, GDPR, LGPD and hundreds of the worldâ€™s privacy compliance frameworks.",
    "version": "1.0.0"
  },
  "paths": {
    "/api/instances/{instanceId}/activitylog/search": {
      "get": {
        "tags": [
          "ActivityLog"
        ],
        "summary": "Retrieves list of activity logs",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "dateFilter",
            "in": "query",
            "description": "dateFilter",
            "schema": {
              "type": "integer",
              "description": "dateFilter",
              "format": "int32"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "orderby",
            "schema": {
              "type": "string",
              "description": "orderby",
              "nullable": true
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "schema": {
              "type": "string",
              "description": "filter",
              "nullable": true
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "top",
            "schema": {
              "type": "integer",
              "description": "top",
              "format": "int32"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "skip",
            "schema": {
              "type": "integer",
              "description": "skip",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogPagedData"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant/activitylog": {
      "post": {
        "tags": [
          "ActivityLog"
        ],
        "summary": "Create activity logs",
        "requestBody": {
          "description": "auditLogRequest",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/artificialintelligence/endpoint": {
      "get": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Retrieves a list of AI endpoints for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AIEndpoint"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Create new AI workflow metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIEndpointResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/artificialintelligence/endpoint/{id}": {
      "get": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Retrieves the AI endpoint for the provided instanceId and id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIEndpoint"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Updates AI workflow metadata for the provided instanceId and workflowId",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AIEndpointSaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIEndpointResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Deletes the AI endpoint for the provided instanceId and id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIEndpointResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/artificialintelligence": {
      "get": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Retrieves a list of AI workflow metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AIWorkflowMetadata"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/artificialintelligence/workflows/{workflowId}": {
      "get": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Retrieves the AI workflow metadata for the provided instanceId and workflowId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "The workflowId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The workflowId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIWorkflowMetadata"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Updates AI workflow metadata for the provided instanceId and workflowId",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "The workflowId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The workflowId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIWorkflowResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Deletes the AI workflow metadata for the provided instanceId and workflowId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "The workflowId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The workflowId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIWorkflowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/artificialintelligence/workflows": {
      "post": {
        "tags": [
          "ArtificialIntelligence"
        ],
        "summary": "Create new AI workflow metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AIWorkflowMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIWorkflowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/association": {
      "get": {
        "tags": [
          "Association"
        ],
        "summary": "Retrieves a list of association metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Association"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Association"
        ],
        "summary": "Create new association metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/association/{associationName}": {
      "get": {
        "tags": [
          "Association"
        ],
        "summary": "Retrieves the association metadata for the provided instanceId and associationName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "associationName",
            "in": "path",
            "description": "Name of the association.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the association.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Association"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Association"
        ],
        "summary": "Updates association metadata for the provided instanceId and associationName with AssociationMetadata.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "associationName",
            "in": "path",
            "description": "Name of the association.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the association.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAssociationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociationResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Association"
        ],
        "summary": "Deletes the association metadata for the provided instanceId and associationName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "associationName",
            "in": "path",
            "description": "Name of the association.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the association.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences": {
      "get": {
        "tags": [
          "Audiences"
        ],
        "summary": "Retrieves a list of audience metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Audience"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Audiences"
        ],
        "summary": "Create new audience metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/count": {
      "get": {
        "tags": [
          "Audiences"
        ],
        "summary": "Retrieves audience count for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/{audienceName}": {
      "get": {
        "tags": [
          "Audiences"
        ],
        "summary": "Retrieves the audience metadata for the provided instanceId and audiencesName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "audienceName",
            "in": "path",
            "description": "Name of the audience.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the audience.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audience"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Audiences"
        ],
        "summary": "Updates audience metadata for the provided instanceId and audienceName with AudienceMetadata.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "audienceName",
            "in": "path",
            "description": "Name of the audience.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the audience.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Audiences"
        ],
        "summary": "Deletes the audience metadata for the provided instanceId and audienceName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "audienceName",
            "in": "path",
            "description": "Name of the audience.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the audience.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/profiles/count": {
      "get": {
        "tags": [
          "Audiences"
        ],
        "summary": "Retrieves the audiences profile count for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceProfileCount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/{audienceName}/rename": {
      "put": {
        "tags": [
          "Audiences"
        ],
        "summary": "Rename audience dispaly name for the provided instanceId and audienceName with AudienceMetadata.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "audienceName",
            "in": "path",
            "description": "Name of the audience.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the audience.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAudienceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/{audienceName}/activate": {
      "put": {
        "tags": [
          "Audiences"
        ],
        "summary": "Activates audience for provided instanceId with audienceName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "audienceName",
            "in": "path",
            "description": "Name of the audience.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the audience.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/{audienceName}/deactivate": {
      "put": {
        "tags": [
          "Audiences"
        ],
        "summary": "Deactivate audience for provided instanceId with audienceName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "audienceName",
            "in": "path",
            "description": "Name of the audience.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the audience.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/runall": {
      "get": {
        "tags": [
          "Audiences"
        ],
        "summary": "Run all audiences for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/{audienceName}/runaudience": {
      "get": {
        "tags": [
          "Audiences"
        ],
        "summary": "Run one audiences for provided instanceId and audienceName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "audienceName",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/cancelrunall": {
      "get": {
        "tags": [
          "Audiences"
        ],
        "summary": "Cancel Run all audiences for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/{audienceName}/cancelrun": {
      "get": {
        "tags": [
          "Audiences"
        ],
        "summary": "Cancel one audiences for provided instanceId and audienceName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "audienceName",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/audiences/statistics/{audienceName}": {
      "get": {
        "tags": [
          "Audiences"
        ],
        "summary": "Retrieves the audience statistics data for the provided instanceId and audiencesName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "audienceName",
            "in": "path",
            "description": "Name of the audience.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the audience.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceStatistics"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/plan": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get plans",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plans"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/{customerId}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get customer by id",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "customerId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customers"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/{customerId}/invoice": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get customer invoices by id",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "customerId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/{customerId}/paymentmethod": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get customer payment methods by customer id",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "customerId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/cancelplan": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "cancel plan",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/paymentmethod/{paymentMethodId}": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Update billing address",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          },
          {
            "name": "paymentMethodId",
            "in": "path",
            "description": "paymentMethodId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "paymentMethodId",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/session": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "create check out session",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/updatesubscription/session": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "update subscription by session Id",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBySessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/plan/{planId}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get plan by plan Id.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "planId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "planId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plans"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/billing/updatesubscription/plan": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "update subscription by plan Id",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanByIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instance/bulkimport": {
      "post": {
        "tags": [
          "BulkImport"
        ],
        "summary": "Bulk import data",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkImportResponseData"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "BulkImport"
        ],
        "summary": "get bulk import task status",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportTaskResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/domain": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves a list of domains metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Channel"
        ],
        "summary": "Create new domain metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/domain/{domainId}": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves the domain metadata for the provided instanceId and domainId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "description": "The domainId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The domainId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Channel"
        ],
        "summary": "Updates domain metadata for the provided instanceId and domainId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "description": "The domainId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The domainId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Channel"
        ],
        "summary": "Deletes the domain metadata for the provided instanceId and domainId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "description": "The domainId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The domainId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/domain/{domainId}/channel/{channelId}": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Retrieves the channel metadata for the provided instanceId and channelId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "description": "The domainId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The domainId.",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "description": "The channelId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The channelId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Channel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Channel"
        ],
        "summary": "Updates channel metadata for the provided instanceId and channelId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "description": "The channelId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The channelId.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Channel"
        ],
        "summary": "Deletes the channel metadata for the provided instanceId, channelId and domainId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "description": "The domainId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The domainId.",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "description": "The channelId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The channelId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/domain/{domainId}/channel": {
      "post": {
        "tags": [
          "Channel"
        ],
        "summary": "Create new channel metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveChannelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/domain/{domainId}/channel/scheduletrigger/{channelId}": {
      "put": {
        "tags": [
          "Channel"
        ],
        "summary": "Create or update pipeline schedule trigger for provided instanceId domainId and channelId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "description": "The domainId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The domainId.",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "channelId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The pipelineScheduleTrigger.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/domain/{domainId}/channel/{channelId}/run": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "run channel for provided instanceId and objectid.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "description": "The domainId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The domainId.",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "description": "The channelId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The channelId.",
              "format": "uuid"
            }
          },
          {
            "name": "scheduleTrigger",
            "in": "query",
            "description": "The scheduleTrigger.",
            "schema": {
              "type": "boolean",
              "description": "The scheduleTrigger.",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/domain/{domainId}/channel/{channelId}/cancelrun": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "Cancel run channel for provided instanceId and objectid.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "description": "The domainId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The domainId.",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "description": "The channelId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The channelId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/domain/{domainId}/channel/{channelId}/lastactivity": {
      "get": {
        "tags": [
          "Channel"
        ],
        "summary": "GetLastActivity",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "domainId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          }
        }
      }
    },
    "/api/consentmanager/instances/{instanceId}/flag": {
      "get": {
        "tags": [
          "ConsentManager"
        ],
        "summary": "GetConsentFlags",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsentFlag"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ConsentManager"
        ],
        "summary": "CreateConsentFlag",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentFlagResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consentmanager/instances/{instanceId}/preferencemanagement": {
      "get": {
        "tags": [
          "ConsentManager"
        ],
        "summary": "SavePreferenceManagement",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsentFlag"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConsentManager"
        ],
        "summary": "SavePreferenceManagement",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SavePreferenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentFlagResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consentmanager/instances/{instanceId}/flag/{id}": {
      "put": {
        "tags": [
          "ConsentManager"
        ],
        "summary": "UpdateConsentFlag",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentFlagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentFlagResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConsentManager"
        ],
        "summary": "DeleteConsentFlag",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentFlagResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consentmanager/instances/{instanceId}/content": {
      "get": {
        "tags": [
          "ConsentManager"
        ],
        "summary": "GetConsentManagementContent",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentManagementContent"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ConsentManager"
        ],
        "summary": "SaveConsentManagementContent.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentManagementContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentManagementContentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Retrieves dashboard data for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/dashboard/headerstat": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Retrieves dashboard header stat for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardHeaderStat"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Retrieves all data flow for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataFlowInfo"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Create new dataflow metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/advancedsetting": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "get dataflow advanced setting for the provided instanceId and objectId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "query",
            "description": "The objectId.",
            "schema": {
              "type": "string",
              "description": "The objectId.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataflowAdvancedSetting"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Create or update dataflow advanced setting for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowAdvancedSettingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataflowAdvancedSettingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/semanticlabels": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Retrieves dataflow for with semanticlabel the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataFlowInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/connector": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Retrieves all dataflow connector for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConnectorSettings"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/{objectId}": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Retrieves data flow for the provided instanceId and objectId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "The objectId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The objectId.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowInfo"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dataflows"
        ],
        "summary": "update dataflow metadata for provided instanceId and objectId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "The objectId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The objectId.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dataflows"
        ],
        "summary": "remove dataflow for provided objectId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "The objectId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The objectId.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/{objectId}/schedule": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Retrieves data flow pipeline schedule for the provided instanceId and objectId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "The objectId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The objectId.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineScheduleTrigger"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/scheduletrigger/{objectId}": {
      "put": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Create or update pipeline schedule trigger for provided instanceId and objectId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "The objectId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The objectId.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The pipelineScheduleTrigger.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineScheduleTrigger"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTriggerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/{objectId}/run": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "run dataflow metadata for provided instanceId and objectid.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "The objectId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The objectId.",
              "nullable": true
            }
          },
          {
            "name": "refreshType",
            "in": "query",
            "description": "The refreshType",
            "schema": {
              "type": "string",
              "description": "The refreshType",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "scheduleTrigger",
            "in": "query",
            "description": "scheduleTrigger",
            "schema": {
              "type": "boolean",
              "description": "scheduleTrigger",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/{objectId}/cancelrun": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Cancel pipeline run for provided instanceId and objectid.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "The objectId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The objectId.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/entities": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Retrieves all entities for the provided instance id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/{sourceName}/entities/{entityName}": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Retrieves single entity for the provided source name and entity name.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "sourceName",
            "in": "path",
            "description": "The sourceName.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The sourceName.",
              "nullable": true
            }
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The entityName.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The entityName.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/{sourceName}/entities/{entityName}/data": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Retrieves single entity with data for the provided source name and entity name.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "sourceName",
            "in": "path",
            "description": "The sourceName.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The sourceName.",
              "nullable": true
            }
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The entityName.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The entityName.",
              "nullable": true
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "The top.",
            "schema": {
              "type": "integer",
              "description": "The top.",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/{sourceName}/entities/{entityName}/attributes": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Retrieves attributes of entity for the provided source name and entity name.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "sourceName",
            "in": "path",
            "description": "The sourceName.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The sourceName.",
              "nullable": true
            }
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The entityName.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The entityName.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/{sourceName}/entities/{entityName}/export": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Exports the entity data to csv string for the provided source name and entity name.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "dataflowId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "dataflowId",
              "format": "uuid"
            }
          },
          {
            "name": "sourceName",
            "in": "path",
            "description": "The sourceName.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The sourceName.",
              "nullable": true
            }
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "entityName",
            "required": true,
            "schema": {
              "type": "string",
              "description": "entityName",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/connector/{connectorId}": {
      "get": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get connector by instanceId, connectorId and ObjectId",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "dataflowId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "dataflowId",
              "format": "uuid"
            }
          },
          {
            "name": "connectorId",
            "in": "path",
            "description": "connectorId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "connectorId",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "query",
            "description": "objectId",
            "schema": {
              "type": "string",
              "description": "objectId",
              "default": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connector"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/amazons3/bucketfolder": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get AWS bucket folder list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/amazons3/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get AWS bucket file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/amazons3/preview": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Read AWS file object.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AWSS3Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/shopify/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get shopify file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/shopify/preview": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Read shopify table data.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/campaignmonitor/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get campaign monitor file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignMonitorFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/campaignmonitor/preview": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Read campaign monitor data.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMonitorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/klaviyo/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get Klaviyo file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/KlaviyoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KlaviyoFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/salesforce/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get salesforce file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesforceFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/azurestorage/folder": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get storage folder list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureStorageFolderList"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/azurestorage/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get storage file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureStorageFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/azurestorage/preview": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get storage file content",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AzureStorageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/adlsgen1/folder": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get Adls gen1 folder list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureStorageFolderList"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/adlsgen1/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get adls gen1 file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureStorageFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/adlsgen1/preview": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get adls gen1 file content",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdlsGen1StorageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/salesforcemarketingcloud/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get salesforce marketing cloud file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesforceMarketingCloudRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesforceMarketingCloudFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/manage/workflow/upsertsfmcrunentity": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Upserts an entry for SFMC Run Entity",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SFMCRunEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/manage/workflow/getsfmcrunentitybyobjectid": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Gets entry for SFMC Run Entity by object id",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SFMCRunEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/surveymonkey/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get survey monkey file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyMonkeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyMonkeyFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/dynamics365/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get Dynamics365 file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Dynamics365Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dynamics365FileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/dataflows/redshift/filelist": {
      "post": {
        "tags": [
          "Dataflows"
        ],
        "summary": "Get redshift file list",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RedshiftRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedshiftFileListDataflowFileListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/datamap/instances/{instanceId}": {
      "get": {
        "tags": [
          "DataMap"
        ],
        "summary": "GetDataMaps",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataMapMetaData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/datamap/instances/{instanceId}/piimap": {
      "get": {
        "tags": [
          "DataMap"
        ],
        "summary": "GetPIIMaps",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PIIMapDataflow"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataMap"
        ],
        "summary": "SavePIIMap",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PIIMapRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMapResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/datamap/instances/{instanceId}/piimap/{objectId}": {
      "get": {
        "tags": [
          "DataMap"
        ],
        "summary": "GetPIIMapByObjectId",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "objectId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "objectId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PIIMap"
                }
              }
            }
          }
        }
      }
    },
    "/api/dataprocessingactivity/instances/{instanceId}": {
      "get": {
        "tags": [
          "DataProcessingActivity"
        ],
        "summary": "GetDataProcessingActivities",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProcessingActivity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataProcessingActivity"
        ],
        "summary": "CreateDataProcessingActivity",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dataprocessingactivity/instances/{instanceId}/{id}": {
      "get": {
        "tags": [
          "DataProcessingActivity"
        ],
        "summary": "GetDataProcessingActivityById",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivity"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataProcessingActivity"
        ],
        "summary": "UpdateDataProcessingActivity",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataProcessingActivityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataProcessingActivity"
        ],
        "summary": "DeleteDataProcessingActivity",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingActivityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}": {
      "get": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "GetDataSubjectRequest",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "schema": {
              "type": "string",
              "description": "status",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSubject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/{id}": {
      "get": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "GetDataSubjectRequestDetailById",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubject"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/review/{id}/{disableEmailNotification}": {
      "get": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "ReviewRequest",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "nullable": true
            }
          },
          {
            "name": "disableEmailNotification",
            "in": "path",
            "description": "disableEmailNotification",
            "required": true,
            "schema": {
              "type": "boolean",
              "description": "disableEmailNotification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/resendemailverification/{id}": {
      "get": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "Resend email verification link",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/complete/{id}/{disableEmailNotification}": {
      "get": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "CompleteRequest",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "nullable": true
            }
          },
          {
            "name": "disableEmailNotification",
            "in": "path",
            "description": "disableEmailNotification",
            "required": true,
            "schema": {
              "type": "boolean",
              "description": "disableEmailNotification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/reprocess/{id}/{disableEmailNotification}": {
      "get": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "CompleteRequest",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "nullable": true
            }
          },
          {
            "name": "disableEmailNotification",
            "in": "path",
            "description": "disableEmailNotification",
            "required": true,
            "schema": {
              "type": "boolean",
              "description": "disableEmailNotification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/create": {
      "post": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "Save data subject request",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/reject/{id}/{disableEmailNotification}": {
      "post": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "RejectRequest",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "nullable": true
            }
          },
          {
            "name": "disableEmailNotification",
            "in": "path",
            "description": "disableEmailNotification",
            "required": true,
            "schema": {
              "type": "boolean",
              "description": "disableEmailNotification"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/totalopendsr": {
      "get": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "GetTotalOpenDSR",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/opendsrchartdata": {
      "get": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "GetOpenDSRChartData",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyCenterChartData"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasubjectrequest/instances/{instanceId}/importdsr": {
      "post": {
        "tags": [
          "DataSubjectRequest"
        ],
        "summary": "Import DSR.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadLogoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/email/send": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "send email.",
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/data/{entityName}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Gets all data items of the entity",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "entityName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/data/{entityName}/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Gets specific entity data item by id",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "entityName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/export": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Retrieves a list of export metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExportMetadata"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Export"
        ],
        "summary": "Create new export metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/export/{id}": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Retrieves the export metadata for the provided instanceId and id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Name of the association.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the association.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportMetadata"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Export"
        ],
        "summary": "Updates export metadata for the provided instanceId and id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id of the export.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id of the export.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Export"
        ],
        "summary": "Deletes the export metadata for the provided instanceId and id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Name of the id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the id.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/export/storage": {
      "post": {
        "tags": [
          "Export"
        ],
        "summary": "Export entities to storage",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The runExportRequest",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RunExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/export/{exportId}/cancelrun": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Cancel pipeline run for provided instanceId and exportId+.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "exportId",
            "in": "path",
            "description": "The exportId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The exportId.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get all active instances for the current user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instance"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Create a new instance for provided tenant id.",
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/tenant/{tenantId}": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Retrieves all instances for the provided tenantId.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "The tenantId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tenantId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instance"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Retrieves instance for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Instances"
        ],
        "summary": "Update instance by provided insatance id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/defaultconfiguration": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Retrieves instance default for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDefault"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/default": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Retrieves instance default for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDefault"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Instances"
        ],
        "summary": "Create or update instance default by provided insatance id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInstanceDefault"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{tenantId}/{instanceId}": {
      "delete": {
        "tags": [
          "Instances"
        ],
        "summary": "Remove instance by provided instance id.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "The tenantId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tenantId.",
              "format": "uuid"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/clearcdp/{tenantId}/{instanceId}": {
      "delete": {
        "tags": [
          "Instances"
        ],
        "summary": "Remove instance by provided instance id.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "The tenantId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tenantId.",
              "format": "uuid"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/clearprivacy/{tenantId}/{instanceId}": {
      "delete": {
        "tags": [
          "Instances"
        ],
        "summary": "Remove instance by provided instance id.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "The tenantId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tenantId.",
              "format": "uuid"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/updateRefreshSchedule": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Update refresh schedule of instance",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataRefreshScheduleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/metrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Retrieves a list of metrics metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricMetadata"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Metrics"
        ],
        "summary": "Create new metric metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/metrics/count": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Retrieves metrics count for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/metrics/{metricName}": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Retrieves the metric metadata for the provided instanceId and metricName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "metricName",
            "in": "path",
            "description": "Name of the metric.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the metric.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricMetadata"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Metrics"
        ],
        "summary": "Updates metric metadata for the provided instanceId and metricname",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "metricName",
            "in": "path",
            "description": "Name of the metric.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the metric.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MetricMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Metrics"
        ],
        "summary": "Deletes the metric metadata for the provided instanceId and metricName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "metricName",
            "in": "path",
            "description": "Name of the metric.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the metric.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/metrics/{metricName}/rename": {
      "put": {
        "tags": [
          "Metrics"
        ],
        "summary": "Rename metric metadata for the provided instanceId and metricName",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "metricName",
            "in": "path",
            "description": "Name of the metric.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the metric.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RenameMetricRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/metrics/runall": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Run all metrics for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/metrics/cancelrunall": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Cancel Run all metrics for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/metrics/profile/{skypointId}": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Retrieves metric data for the provided instanceId and skypointId for profile.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "skypointId",
            "in": "path",
            "description": "The skypointId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The skypointId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/metrics/entity/{name}": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Retrieves metric entity data for the provided instanceId and metric name.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name.",
              "nullable": true
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "The top.",
            "schema": {
              "type": "integer",
              "description": "The top.",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/metrics/entity/export/{name}": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Exports metric entity data to csv string for the provided instanceId and metric name",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/msflow/token": {
      "get": {
        "tags": [
          "MsFlow"
        ],
        "summary": "Get access token for MS flow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/all": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetOrganizationSettings",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSetting"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetOrganizationSettings",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSetting"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "Save organization settings.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSettingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/content": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetPrivacyPolicyContent",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyContent"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "Save privacy content.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyContentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/datapractice": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetDataPracticeContent",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPracticeContent"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "SaveDataPractice.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataPracticeContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPracticeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/aboutus": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetAboutUsContent",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AboutUsContent"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "SavePrivacyCenterAboutUs",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AboutUsContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AboutUsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/action": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetPrivacyCenterAction",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyCenterAction"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "SavePrivacyCenterAction",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyCenterActionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/adminaction": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetPrivacyCenterAdminAction",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyCenterAdminAction"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "SavePrivacyCenterAdminAction",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyCenterAdminAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyCenterAdminActionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/tabconfiguration": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetPrivacyTabConfiguration",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivacyTabConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "SavePrivacyTabConfiguration",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTabConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyTabConfigurationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/upload": {
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "Upload privacy logo.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadLogoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/upload/faviconicon": {
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "Upload privacy favicon icon.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLogo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadLogoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/residencytype": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetResidencyTypeOptions",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DSROptionConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "CreateResidencyTypeOption",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSROptionConfigurationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/residencytype/{id}": {
      "put": {
        "tags": [
          "Privacy"
        ],
        "summary": "UpdateResidencyTypeOption",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSROptionConfigurationResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Privacy"
        ],
        "summary": "DeleteResidencyTypeOption",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSROptionConfigurationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/subjecttype": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetSubjectTypeOptions",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DSROptionConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "CreateSubjectTypeOption",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSROptionConfigurationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/subjecttype/{id}": {
      "put": {
        "tags": [
          "Privacy"
        ],
        "summary": "UpdateSubjectTypeOption",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DSROptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSROptionConfigurationResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Privacy"
        ],
        "summary": "DeleteSubjectTypeOption",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSROptionConfigurationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/categorytype": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetDoNotSellCategoryTypeOptions",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRDoNotSellCategory"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "CreateDoNotSellCategoryOption",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRDoNotSellCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/categoryheader": {
      "post": {
        "tags": [
          "Privacy"
        ],
        "summary": "SaveCategoryHeader",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryHeaderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRDoNotSellCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/categorytype/{id}": {
      "put": {
        "tags": [
          "Privacy"
        ],
        "summary": "UpdateDoNotSellCategoryTypeOption",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRDoNotSellCategoryResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Privacy"
        ],
        "summary": "DeleteDoNotSellCategoryTypeOption",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRDoNotSellCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/visitor": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "Get visitor data",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/dsroption": {
      "get": {
        "tags": [
          "Privacy"
        ],
        "summary": "GetDSRConfigureOptionList",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "query",
            "description": "privacyId",
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRConfigureOptionTypeList"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacy/instances/{instanceId}/{privacyId}": {
      "delete": {
        "tags": [
          "Privacy"
        ],
        "summary": "DeletePrivacyCenterData",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "privacyId",
            "in": "path",
            "description": "privacyId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "privacyId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSettingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacyreport/instances/{instanceId}/dsr/{year}/{month}": {
      "get": {
        "tags": [
          "PrivacyReport"
        ],
        "summary": "GetDataSubjectRequestReport",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "year",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "month",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectRequestReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacyreport/instances/{instanceId}/consent/{year}/{month}": {
      "get": {
        "tags": [
          "PrivacyReport"
        ],
        "summary": "GetConsentReport",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "year",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "month",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacyreport/instances/{instanceId}/privacycenter/{year}/{month}": {
      "get": {
        "tags": [
          "PrivacyReport"
        ],
        "summary": "GetPrivacyCenterReport",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "year",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "month",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyCenterReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacytemplate/instances/{instanceId}": {
      "get": {
        "tags": [
          "PrivacyTemplate"
        ],
        "summary": "GetPrivacyTemplateData",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivacyTemplate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PrivacyTemplate"
        ],
        "summary": "SavePrivacyTemplateData",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyTemplateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/privacytemplate/instances/{instanceId}/{id}": {
      "get": {
        "tags": [
          "PrivacyTemplate"
        ],
        "summary": "GetPrivacyTemplateDataById",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "id",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/profiles/count": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Retrieves profiles count for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/profiles/search": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Retrieves profiles by search criteria and the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query.",
            "schema": {
              "type": "string",
              "description": "The query.",
              "nullable": true
            }
          },
          {
            "name": "searchFilter",
            "in": "query",
            "description": "searchFilter",
            "schema": {
              "type": "string",
              "description": "searchFilter",
              "nullable": true
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "The top.",
            "schema": {
              "type": "integer",
              "description": "The top.",
              "format": "int32"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "The skip.",
            "schema": {
              "type": "integer",
              "description": "The skip.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/profiles/suggestor": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Retrieves profiles suggestor by criteria and the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "The searchText.",
            "schema": {
              "type": "string",
              "description": "The searchText.",
              "nullable": true
            }
          },
          {
            "name": "searchFilter",
            "in": "query",
            "description": "searchFilter",
            "schema": {
              "type": "string",
              "description": "searchFilter",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/profiles/{id}": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Retrieves profile by id and the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/profiles/profilesearchconfiguration": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Get profile search configuration for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileSearchConfiguration"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Profiles"
        ],
        "summary": "Save profile search configuration for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitySearchConfiguration"
                },
                "description": "The request",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileSearchConfigurationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/settings/connector": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a list of connetor.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connector"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/settings/connector/{id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a connetor by id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connector"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/settings/export": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a export settings.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExportSettings"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/settings/semanticlabel": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a list of semantic labels.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticLabel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a list of semantic labels.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SemanticLabelSaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticLabelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/settings/mapentitynormalizedefaultinfo": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a list of default normalize options.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MapEntityNormalizeDefaultOption"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/settings/securitygroup": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a list of security groups.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecurityGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/settings/selectlistoption/{type}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a select list options by type.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "The type.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The type.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectListOptions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/settings/configuration/{type}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a configuration by type.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "The type.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The type.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/settings/configuration/{type}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a configuration settings by type",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The type",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Retrieves a list of stitches metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StitchMetadata"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stitch"
        ],
        "summary": "Create new stitch metadata with StitchMetadata on instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/metadata": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Retrieves stitch metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/metadata/mlmerge": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Retrieves stitch ML merge metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/match/preview/{matchType}": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Retrieves stitch statistics preview data for the provided instanceId, datasourceId, entityName and ruleName.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "datasourceId",
            "in": "query",
            "description": "The datasourceId",
            "schema": {
              "type": "string",
              "description": "The datasourceId",
              "format": "uuid"
            }
          },
          {
            "name": "entityName",
            "in": "query",
            "description": "The entityName",
            "schema": {
              "type": "string",
              "description": "The entityName",
              "nullable": true
            }
          },
          {
            "name": "ruleId",
            "in": "query",
            "description": "The ruleId",
            "schema": {
              "type": "string",
              "description": "The ruleId",
              "nullable": true
            }
          },
          {
            "name": "matchType",
            "in": "path",
            "description": "The matchType",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The matchType",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleStatistics"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Retrieves the stitch metadata for the provided instanceId and id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchMetadata"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Stitch"
        ],
        "summary": "Updates stitch metadata for the provided instanceId and stitchId with StitchMetadata.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StitchMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/mlconflictresolution": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Retrieves the stitch metadata for the provided instanceId and id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MLConflictResolution"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/entityInformation": {
      "put": {
        "tags": [
          "Stitch"
        ],
        "summary": "Update stitch entity metadata for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/entityInformation/update": {
      "put": {
        "tags": [
          "Stitch"
        ],
        "summary": "update stitch entity attributes for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStitchAttributeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/mapentitynormalize": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Get map entity normalize info list for provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MapEntityNormalizeInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/semanticlabelcriteria": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Get stitch semantic label criteria list by provided instanceId and stitchId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SemanticLabelCriteria"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/semanticlabelcriteriahistory": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Get stitch semantic label criteria history list by provided instanceId and stitchId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "The top",
            "schema": {
              "type": "integer",
              "description": "The top",
              "format": "int32",
              "default": -1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SemanticLabelCriteriaHistory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/stitchPlan/{matchType}": {
      "put": {
        "tags": [
          "Stitch"
        ],
        "summary": "Save stitch plan metadata for provided stitchId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          },
          {
            "name": "matchType",
            "in": "path",
            "description": "The matchType.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The matchType.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StitchPlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/conflictResolutionRules": {
      "put": {
        "tags": [
          "Stitch"
        ],
        "summary": "Save stitch resolution metadata for provided stitchId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          },
          {
            "name": "matchType",
            "in": "query",
            "description": "The matchType.",
            "schema": {
              "type": "string",
              "description": "The matchType.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/mlconflictresolutionrules": {
      "put": {
        "tags": [
          "Stitch"
        ],
        "summary": "Save stitch Ml conflict resolution metadata.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConflictResolutionMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MLConflictResolutionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/run/map": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Run map for provided stitchId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/run/match/{matchType}": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Run match for provided stitchId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          },
          {
            "name": "matchType",
            "in": "path",
            "description": "The matchType.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The matchType.",
              "nullable": true
            }
          },
          {
            "name": "refreshType",
            "in": "query",
            "description": "The refreshType.",
            "schema": {
              "type": "string",
              "description": "The refreshType.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/run/stitch": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Run stitch for provided stitchId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/run/mlmerge": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Run RunMLMerge for provided instanceid.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/entitystatistics/{matchType}": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Get stitch entity statistics by stitchId and instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "matchType",
            "in": "path",
            "description": "The matchType.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The matchType.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityStatistics"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/stitch/manage/workflow": {
      "post": {
        "tags": [
          "Stitch"
        ],
        "summary": "Manage workflow used for datapipeline to update pipeline run status.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/{stitchId}/cancelrun/{workflowtype}": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "Cancel pipeline run for provided instanceId and exportId+.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "stitchId",
            "in": "path",
            "description": "The stitchId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The stitchId.",
              "nullable": true
            }
          },
          {
            "name": "workflowType",
            "in": "path",
            "description": "The workflowType.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The workflowType.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/stitch/stitchcriteriastats/{matchtype}": {
      "get": {
        "tags": [
          "Stitch"
        ],
        "summary": "GetStitchCriteriaStatsByMatchType",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "matchType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StitchStatistics"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Retrieves all tenants.",
        "operationId": "GetAllTenants",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tenant"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Create a new tenant.",
        "operationId": "CreateTenant",
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/user/{objectId}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Retrieves all tenants.",
        "operationId": "GetTenantsByObjectId",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tenant"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/search": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Retrieves tenant activities for the provided id.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantflowPagedData"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Retrieves tenant for the provided id.",
        "operationId": "GetTenantById",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tenants"
        ],
        "summary": "Updates tenant by tenant id.",
        "operationId": "UpdateTenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenants"
        ],
        "summary": "Remove a tenant by tenant id.",
        "operationId": "DeleteTenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "The tenantId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tenantId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/instance/{instanceId}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Retrieves tenant for the provided instance id.",
        "operationId": "GetTenantByInstanceId",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/register": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Registers a new tenant, used by Azure AD B2C",
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantRegisterResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/skypointuserregistertenant": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Registers a new tenant, used by Azure AD B2C",
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SkyPointUserSignupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/invite": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Invite user to join existing tenant, used by Azure AD B2C",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/instance/{instanceId}/users/reinvite": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Reinvite user to join existing tenant, used by Azure AD B2C",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvitedUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/join": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Add member to existing tenant",
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JoinTenantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantRegisterResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/tenantdefault": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Get tenant default by tenantId.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDefault"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tenants"
        ],
        "summary": "Save tenant default.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "tenantId",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantDefault"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/checkifresourceexist": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "CheckIfResourceExist",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/manage/tenantflow": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "CreateTenantflow",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenantflow"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/createtenantbillingplan": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "CreateTenantBillingPlan",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/createtenantdatabaseanddefaults": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "CreateTenantDatabaseAndDefaults",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/createtenantstorageaccount": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "CreateTenantStorageAccount",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/gettenantdefautuser": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "GetTenantDefaultUser",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/timeline": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "summary": "Retrieves a list of timeline metadata for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedTimelineMappingGroupMetadata"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timeline"
        ],
        "summary": "Create new timeline metadata for instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/timeline/{mappingId}": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "summary": "Retrieves the timeline mapping metadata for the provided instanceId and mappingId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "mappingId",
            "in": "path",
            "description": "The mappingId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The mappingId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/timeline/{groupId}": {
      "put": {
        "tags": [
          "Timeline"
        ],
        "summary": "Updates timeline metadata for the provided instanceId and groupId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "groupId.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/timeline/{groupId}/{mappingId}": {
      "delete": {
        "tags": [
          "Timeline"
        ],
        "summary": "Delete timeline metadata for the provided instanceId, groupId and mappingId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "groupId.",
              "format": "uuid"
            }
          },
          {
            "name": "mappingId",
            "in": "path",
            "description": "The mappingId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The mappingId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/timeline/{groupId}/run": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "summary": "Run timeline for provided groupId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The groupId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The groupId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/timeline/{groupId}/cancelrun": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "summary": "Run timeline for provided groupId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The groupId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The groupId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/timeline/profile/{skypointId}": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "summary": "Retrieves timeline data for the provided instanceId and skypointId for profile.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "skypointId",
            "in": "path",
            "description": "The skypointId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The skypointId.",
              "format": "uuid"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "The skip.",
            "schema": {
              "type": "integer",
              "description": "The skip.",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "The top.",
            "schema": {
              "type": "integer",
              "description": "The top.",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentSearchResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/checkuserexists": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Checks if user exists in DB",
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/defaultinstance": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "GetDefaultInstance",
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericInstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/validateinstance": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "ValidateInstance",
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceValidationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a new user.",
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Verify email",
        "requestBody": {
          "description": "request",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/users/blockunblockuser": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "BlockUnblockUser",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves users for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a new user.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves user by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/users/instance": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add an existing user to the provided instance.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/users/unlink": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Unlinks a user from the provided instance.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/users/delete": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a user from the provided instance.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/users/search": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves users by search criteria and provided tenantId.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "The tenant identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tenant identifier.",
              "format": "uuid"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query.",
            "schema": {
              "type": "string",
              "description": "The query.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/users/securitygroups/count": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves security group count for the provided instanceId",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecurityGroupCount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/users/securitygroups/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves the security group by provided instanceId and id.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecurityGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/users/invitedusers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "GetAllInvitedUser",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvitedUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/hooks/{eventName}": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Get all webhooks for an event",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "eventName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "application/prs.odatatestxx-odata": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Create a new webhook.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "eventName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/hooks/{webhookId}": {
      "delete": {
        "tags": [
          "Webhook"
        ],
        "summary": "Deletes a webhook",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/hooks/trigger/{eventName}": {
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Triggers a webhook",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "eventName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/prs.odatatestxx-odata": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JToken"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/workflow": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieves instance workflow for the provided instanceId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workflow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/workflow/{activityId}/last": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieves instance workflow for the provided instanceId and activityId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "The activityId",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The activityId",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/workflow/{activityId}/list": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieves workflow list for the provided instanceId and activityId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "The activityId",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The activityId",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workflow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/workflow/{activityId}/lastactivity": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieves last workflow for the provided instanceId and activityId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "The activityId",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The activityId",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/workflow/{activityId}/run": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieves last workflow for the provided instanceId, activityId and runId.",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId.",
              "format": "uuid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "The activityId",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The activityId",
              "format": "int32"
            }
          },
          {
            "name": "runId",
            "in": "query",
            "description": "The runId",
            "schema": {
              "type": "string",
              "description": "The runId",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/workflow/{activityId}/{entityName}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieves instance workflow for the provided instanceId and activityId and name",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "The activityId",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The activityId",
              "format": "int32"
            }
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The entityName",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The entityName",
              "nullable": true
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "orderby",
            "schema": {
              "type": "string",
              "description": "orderby",
              "nullable": true
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "top",
            "schema": {
              "type": "integer",
              "description": "top",
              "format": "int32"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "skip",
            "schema": {
              "type": "integer",
              "description": "skip",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{instanceId}/manage/workflow/{activityId}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieves instance workflow for the provided instanceId and activityId",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "instanceId",
              "format": "uuid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "activityId",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "activityId",
              "format": "int32"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "orderby",
            "schema": {
              "type": "string",
              "description": "orderby",
              "nullable": true
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "top",
            "schema": {
              "type": "integer",
              "description": "top",
              "format": "int32"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "skip",
            "schema": {
              "type": "integer",
              "description": "skip",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/manage/workflow": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "summary": "Manage workflow used for datapipeline to update pipeline run status.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/manage/workflow/createazurefunctioninstance": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "summary": "Save running instance of azure function to database",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureFunctionInstance"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuditLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditLogPagedData": {
        "type": "object",
        "properties": {
          "auditLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLog"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AuditLogRequest": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InputParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AIEndpoint": {
        "type": "object",
        "properties": {
          "webserviceName": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "endpointUrl": {
            "type": "string",
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "inputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputParameter"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AIEndpointSaveRequest": {
        "type": "object",
        "properties": {
          "webserviceName": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "endpointUrl": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "inputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AIEndpointResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/AIEndpoint"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataflowType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20
        ],
        "type": "integer",
        "format": "int32"
      },
      "EntityType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "Annotation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "mlValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            },
            "nullable": true
          },
          "labelType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Cardinality": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "AssociationType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Association": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "cardinality": {
            "$ref": "#/components/schemas/Cardinality"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "fromAttributeName": {
            "type": "string",
            "nullable": true
          },
          "fromEntityName": {
            "type": "string",
            "nullable": true
          },
          "fromDatasourceId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "associationType": {
            "$ref": "#/components/schemas/AssociationType"
          },
          "toAttributeName": {
            "type": "string",
            "nullable": true
          },
          "toEntityName": {
            "type": "string",
            "nullable": true
          },
          "toDatasourceId": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SemanticType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63
        ],
        "type": "integer",
        "format": "int32"
      },
      "EntityMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "qualifiedEntityName": {
            "type": "string",
            "nullable": true
          },
          "dataSourceName": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityType"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "associations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Association"
            },
            "nullable": true
          },
          "semanticType": {
            "$ref": "#/components/schemas/SemanticType"
          },
          "refreshTime": {
            "type": "string",
            "nullable": true
          },
          "timestampAttributeName": {
            "type": "string",
            "nullable": true
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            },
            "nullable": true
          },
          "dataflowType": {
            "$ref": "#/components/schemas/DataflowType"
          },
          "isInternal": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AIWorkflowDataflowReference": {
        "type": "object",
        "properties": {
          "dataflowId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataflowType": {
            "$ref": "#/components/schemas/DataflowType"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AIWorkflowMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "kind": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "string",
            "format": "uuid"
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "relatedField": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataflowReference": {
            "$ref": "#/components/schemas/AIWorkflowDataflowReference"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AIWorkflowResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/AIWorkflowMetadata"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveAssociationRequest": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "cardinality": {
            "$ref": "#/components/schemas/Cardinality"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "fromAttributeName": {
            "type": "string",
            "nullable": true
          },
          "fromEntityName": {
            "type": "string",
            "nullable": true
          },
          "fromDatasourceId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "associationType": {
            "$ref": "#/components/schemas/AssociationType"
          },
          "toAttributeName": {
            "type": "string",
            "nullable": true
          },
          "toEntityName": {
            "type": "string",
            "nullable": true
          },
          "toDatasourceId": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssociationResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Association"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AudienceQueryType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "RowsetOperation": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "LogicalOperator": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ComparisonOperator": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "type": "integer",
        "format": "int32"
      },
      "AudienceMembershipCriteria": {
        "type": "object",
        "properties": {
          "logicalOperator": {
            "$ref": "#/components/schemas/LogicalOperator"
          },
          "attribute": {
            "type": "string",
            "nullable": true
          },
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperator"
          },
          "childCriterias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceMembershipCriteria"
            },
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "ignoreCase": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "sourceName": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "nullable": true
          },
          "associationName": {
            "type": "string",
            "nullable": true
          },
          "datatype": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AudienceRowset": {
        "type": "object",
        "properties": {
          "rowsetOperation": {
            "$ref": "#/components/schemas/RowsetOperation"
          },
          "criteria": {
            "$ref": "#/components/schemas/AudienceMembershipCriteria"
          },
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "groupError": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityDependency": {
        "type": "object",
        "properties": {
          "qualifiedEntityName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "attributeNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "relationshipNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AudienceQuery": {
        "type": "object",
        "properties": {
          "audienceType": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AudienceQueryType"
          },
          "projections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "rowsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceRowset"
            },
            "nullable": true
          },
          "audienceQuerySql": {
            "type": "string",
            "nullable": true
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityDependency"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AudienceStatus": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "JobStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "AudiencePublishStats": {
        "type": "object",
        "properties": {
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date-time"
          },
          "entityCount": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "evaluationTimeInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "partitionKey": {
            "type": "string",
            "nullable": true
          },
          "rowKey": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "eTag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HistoricalAudienceStats": {
        "type": "object",
        "properties": {
          "evaluationDate": {
            "type": "string",
            "format": "date-time"
          },
          "entityCount": {
            "type": "integer",
            "format": "int32"
          },
          "jobStatus": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "evaluationTimeInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Audience": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "audienceQueryExpression": {
            "$ref": "#/components/schemas/AudienceQuery"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/AudienceStatus"
          },
          "errorDescription": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "evaluationStatus": {
            "$ref": "#/components/schemas/AudiencePublishStats"
          },
          "evaluationStatusHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoricalAudienceStats"
            },
            "nullable": true
          },
          "isAuto": {
            "type": "boolean"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "lastRunId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveAudienceQueryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "isAuto": {
            "type": "boolean"
          },
          "audienceQueryExpression": {
            "$ref": "#/components/schemas/AudienceQuery"
          },
          "status": {
            "$ref": "#/components/schemas/AudienceStatus"
          }
        },
        "additionalProperties": false
      },
      "AudienceResponse": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/Audience"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AudienceProfileCount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "entityCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SaveAudienceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "isAuto": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AudienceStatistics": {
        "type": "object",
        "properties": {
          "x": {
            "type": "string",
            "format": "date-time"
          },
          "y": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Plans": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "pricePerUnit": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "interval": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Subscriptions": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "endedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "billingCycleAnchor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelAtPeriodEnd": {
            "type": "boolean"
          },
          "canceledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currentPeriodEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currentPeriodStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Customers": {
        "type": "object",
        "properties": {
          "preferredLocales": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "nextInvoiceSequence": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "format": "int64"
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscriptions"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JToken": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JToken"
        }
      },
      "HttpStatusCode": {
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32"
      },
      "StringStringIEnumerableKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StripeResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringStringIEnumerableKeyValuePair"
            },
            "nullable": true,
            "readOnly": true
          },
          "content": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "idempotencyKey": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "requestId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Address": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountBusinessProfile": {
        "type": "object",
        "properties": {
          "mcc": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "supportAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "supportEmail": {
            "type": "string",
            "nullable": true
          },
          "supportPhone": {
            "type": "string",
            "nullable": true
          },
          "supportUrl": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountCapabilities": {
        "type": "object",
        "properties": {
          "auBecsDebitPayments": {
            "type": "string",
            "nullable": true
          },
          "bacsDebitPayments": {
            "type": "string",
            "nullable": true
          },
          "cardIssuing": {
            "type": "string",
            "nullable": true
          },
          "cardPayments": {
            "type": "string",
            "nullable": true
          },
          "jcbPayments": {
            "type": "string",
            "nullable": true
          },
          "legacyPayments": {
            "type": "string",
            "nullable": true
          },
          "taxReportingUs1099K": {
            "type": "string",
            "nullable": true
          },
          "taxReportingUs1099Misc": {
            "type": "string",
            "nullable": true
          },
          "transfers": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AddressJapan": {
        "type": "object",
        "properties": {
          "town": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "FileLink": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "expired": {
            "type": "boolean"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fileId": {
            "type": "string",
            "nullable": true
          },
          "file": {
            "$ref": "#/components/schemas/File"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileLink"
            },
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountCompanyVerificationDocument": {
        "type": "object",
        "properties": {
          "backId": {
            "type": "string",
            "nullable": true
          },
          "back": {
            "$ref": "#/components/schemas/File"
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "detailsCode": {
            "type": "string",
            "nullable": true
          },
          "frontId": {
            "type": "string",
            "nullable": true
          },
          "front": {
            "$ref": "#/components/schemas/File"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountCompanyVerification": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/AccountCompanyVerificationDocument"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountCompany": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "addressKana": {
            "$ref": "#/components/schemas/AddressJapan"
          },
          "addressKanji": {
            "$ref": "#/components/schemas/AddressJapan"
          },
          "directorsProvided": {
            "type": "boolean"
          },
          "executivesProvided": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameKana": {
            "type": "string",
            "nullable": true
          },
          "nameKanji": {
            "type": "string",
            "nullable": true
          },
          "ownersProvided": {
            "type": "boolean"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "structure": {
            "type": "string",
            "nullable": true
          },
          "taxIdProvided": {
            "type": "boolean"
          },
          "taxIdRegistrar": {
            "type": "string",
            "nullable": true
          },
          "vatIdProvided": {
            "type": "boolean"
          },
          "verification": {
            "$ref": "#/components/schemas/AccountCompanyVerification"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "IExternalAccount": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "accountId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Dob": {
        "type": "object",
        "properties": {
          "day": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "month": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PersonRelationship": {
        "type": "object",
        "properties": {
          "director": {
            "type": "boolean"
          },
          "executive": {
            "type": "boolean"
          },
          "owner": {
            "type": "boolean"
          },
          "percentOwnership": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "representative": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountRequirementsError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "requirement": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PersonRequirements": {
        "type": "object",
        "properties": {
          "currentlyDue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRequirementsError"
            },
            "nullable": true
          },
          "eventuallyDue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pastDue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pendingVerification": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PersonVerificationDocument": {
        "type": "object",
        "properties": {
          "backId": {
            "type": "string",
            "nullable": true
          },
          "back": {
            "$ref": "#/components/schemas/File"
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "detailsCode": {
            "type": "string",
            "nullable": true
          },
          "frontId": {
            "type": "string",
            "nullable": true
          },
          "front": {
            "$ref": "#/components/schemas/File"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PersonVerification": {
        "type": "object",
        "properties": {
          "additionalDocument": {
            "$ref": "#/components/schemas/PersonVerificationDocument"
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "detailsCode": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "$ref": "#/components/schemas/PersonVerificationDocument"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "addressKana": {
            "$ref": "#/components/schemas/AddressJapan"
          },
          "addressKanji": {
            "$ref": "#/components/schemas/AddressJapan"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "dob": {
            "$ref": "#/components/schemas/Dob"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "firstNameKana": {
            "type": "string",
            "nullable": true
          },
          "firstNameKanji": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "idNumberProvided": {
            "type": "boolean"
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "lastNameKana": {
            "type": "string",
            "nullable": true
          },
          "lastNameKanji": {
            "type": "string",
            "nullable": true
          },
          "maidenName": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "relationship": {
            "$ref": "#/components/schemas/PersonRelationship"
          },
          "requirements": {
            "$ref": "#/components/schemas/PersonRequirements"
          },
          "ssnLast4Provided": {
            "type": "boolean"
          },
          "verification": {
            "$ref": "#/components/schemas/PersonVerification"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountRequirements": {
        "type": "object",
        "properties": {
          "currentDeadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currentlyDue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "disabledReason": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRequirementsError"
            },
            "nullable": true
          },
          "eventuallyDue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pastDue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pendingVerification": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettingsBacsDebitPayments": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettingsBranding": {
        "type": "object",
        "properties": {
          "iconId": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "$ref": "#/components/schemas/File"
          },
          "logoId": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "$ref": "#/components/schemas/File"
          },
          "primaryColor": {
            "type": "string",
            "nullable": true
          },
          "secondaryColor": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettingsDeclineOn": {
        "type": "object",
        "properties": {
          "avsFailure": {
            "type": "boolean"
          },
          "cvcFailure": {
            "type": "boolean"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettingsCardPayments": {
        "type": "object",
        "properties": {
          "declineOn": {
            "$ref": "#/components/schemas/AccountSettingsDeclineOn"
          },
          "statementDescriptorPrefix": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettingsDashboard": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettingsPayments": {
        "type": "object",
        "properties": {
          "statementDescriptor": {
            "type": "string",
            "nullable": true
          },
          "statementDescriptorKana": {
            "type": "string",
            "nullable": true
          },
          "statementDescriptorKanji": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettingsPayoutsSchedule": {
        "type": "object",
        "properties": {
          "delayDays": {
            "type": "integer",
            "format": "int64"
          },
          "interval": {
            "type": "string",
            "nullable": true
          },
          "monthlyAnchor": {
            "type": "integer",
            "format": "int64"
          },
          "weeklyAnchor": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettingsPayouts": {
        "type": "object",
        "properties": {
          "debitNegativeBalances": {
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/AccountSettingsPayoutsSchedule"
          },
          "statementDescriptor": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettingsSepaDebitPayments": {
        "type": "object",
        "properties": {
          "creditorId": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountSettings": {
        "type": "object",
        "properties": {
          "bacsDebitPayments": {
            "$ref": "#/components/schemas/AccountSettingsBacsDebitPayments"
          },
          "branding": {
            "$ref": "#/components/schemas/AccountSettingsBranding"
          },
          "cardPayments": {
            "$ref": "#/components/schemas/AccountSettingsCardPayments"
          },
          "dashboard": {
            "$ref": "#/components/schemas/AccountSettingsDashboard"
          },
          "payments": {
            "$ref": "#/components/schemas/AccountSettingsPayments"
          },
          "payouts": {
            "$ref": "#/components/schemas/AccountSettingsPayouts"
          },
          "sepaDebitPayments": {
            "$ref": "#/components/schemas/AccountSettingsSepaDebitPayments"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountTosAcceptance": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "userAgent": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "businessProfile": {
            "$ref": "#/components/schemas/AccountBusinessProfile"
          },
          "businessType": {
            "type": "string",
            "nullable": true
          },
          "capabilities": {
            "$ref": "#/components/schemas/AccountCapabilities"
          },
          "chargesEnabled": {
            "type": "boolean"
          },
          "company": {
            "$ref": "#/components/schemas/AccountCompany"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "defaultCurrency": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "detailsSubmitted": {
            "type": "boolean"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "externalAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IExternalAccount"
            },
            "nullable": true
          },
          "individual": {
            "$ref": "#/components/schemas/Person"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "payoutsEnabled": {
            "type": "boolean"
          },
          "requirements": {
            "$ref": "#/components/schemas/AccountRequirements"
          },
          "settings": {
            "$ref": "#/components/schemas/AccountSettings"
          },
          "tosAcceptance": {
            "$ref": "#/components/schemas/AccountTosAcceptance"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "BalanceTransactionFeeDetail": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "application": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "IBalanceTransactionSource": {
        "type": "object",
        "additionalProperties": false
      },
      "BalanceTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "availableOn": {
            "type": "string",
            "format": "date-time"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "exchangeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fee": {
            "type": "integer",
            "format": "int64"
          },
          "feeDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceTransactionFeeDetail"
            },
            "nullable": true
          },
          "net": {
            "type": "integer",
            "format": "int64"
          },
          "reportingCategory": {
            "type": "string",
            "nullable": true
          },
          "sourceId": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/IBalanceTransactionSource"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ApplicationFeeRefund": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "balanceTransactionId": {
            "type": "string",
            "nullable": true
          },
          "balanceTransaction": {
            "$ref": "#/components/schemas/BalanceTransaction"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "feeId": {
            "type": "string",
            "nullable": true
          },
          "fee": {
            "$ref": "#/components/schemas/ApplicationFee"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ApplicationFee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "amountRefunded": {
            "type": "integer",
            "format": "int64"
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "balanceTransactionId": {
            "type": "string",
            "nullable": true
          },
          "balanceTransaction": {
            "$ref": "#/components/schemas/BalanceTransaction"
          },
          "chargeId": {
            "type": "string",
            "nullable": true
          },
          "charge": {
            "$ref": "#/components/schemas/Charge"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "originatingTransactionId": {
            "type": "string",
            "nullable": true
          },
          "originatingTransaction": {
            "$ref": "#/components/schemas/Charge"
          },
          "refunded": {
            "type": "boolean"
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationFeeRefund"
            },
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "BillingDetails": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "IPaymentSource": {
        "type": "object",
        "additionalProperties": false
      },
      "Coupon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amountOff": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "nullable": true
          },
          "durationInMonths": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "maxRedemptions": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "percentOff": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "redeemBy": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timesRedeemed": {
            "type": "integer",
            "format": "int64"
          },
          "valid": {
            "type": "boolean"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionBillingThresholds": {
        "type": "object",
        "properties": {
          "amountGte": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "resetBillingCycleAnchor": {
            "type": "boolean",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodAuBecsDebit": {
        "type": "object",
        "properties": {
          "bsbNumber": {
            "type": "string",
            "nullable": true
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodBacsDebit": {
        "type": "object",
        "properties": {
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "sortCode": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodBancontact": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardChecks": {
        "type": "object",
        "properties": {
          "addressLine1Check": {
            "type": "string",
            "nullable": true
          },
          "addressPostalCodeCheck": {
            "type": "string",
            "nullable": true
          },
          "cvcCheck": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardNetworks": {
        "type": "object",
        "properties": {
          "available": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "preferred": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardThreeDSecureUsage": {
        "type": "object",
        "properties": {
          "supported": {
            "type": "boolean",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardWalletAmexExpressCheckout": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardWalletApplePay": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardWalletGooglePay": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardWalletMasterpass": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardWalletSamsungPay": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardWalletVisaCheckout": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardWallet": {
        "type": "object",
        "properties": {
          "amexExpressCheckout": {
            "$ref": "#/components/schemas/PaymentMethodCardWalletAmexExpressCheckout"
          },
          "applePay": {
            "$ref": "#/components/schemas/PaymentMethodCardWalletApplePay"
          },
          "dynamicLast4": {
            "type": "string",
            "nullable": true
          },
          "googlePay": {
            "$ref": "#/components/schemas/PaymentMethodCardWalletGooglePay"
          },
          "masterpass": {
            "$ref": "#/components/schemas/PaymentMethodCardWalletMasterpass"
          },
          "samsungPay": {
            "$ref": "#/components/schemas/PaymentMethodCardWalletSamsungPay"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "visaCheckout": {
            "$ref": "#/components/schemas/PaymentMethodCardWalletVisaCheckout"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCard": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "nullable": true
          },
          "checks": {
            "$ref": "#/components/schemas/PaymentMethodCardChecks"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "expMonth": {
            "type": "integer",
            "format": "int64"
          },
          "expYear": {
            "type": "integer",
            "format": "int64"
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "funding": {
            "type": "string",
            "nullable": true
          },
          "iin": {
            "type": "string",
            "nullable": true
          },
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "networks": {
            "$ref": "#/components/schemas/PaymentMethodCardNetworks"
          },
          "threeDSecureUsage": {
            "$ref": "#/components/schemas/PaymentMethodCardThreeDSecureUsage"
          },
          "wallet": {
            "$ref": "#/components/schemas/PaymentMethodCardWallet"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodCardPresent": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodEps": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodFpx": {
        "type": "object",
        "properties": {
          "accountHolderType": {
            "type": "string",
            "nullable": true
          },
          "bank": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodGiropay": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodIdeal": {
        "type": "object",
        "properties": {
          "bank": {
            "type": "string",
            "nullable": true
          },
          "bic": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodInteracPresent": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodP24": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodSepaDebit": {
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "auBecsDebit": {
            "$ref": "#/components/schemas/PaymentMethodAuBecsDebit"
          },
          "bacsDebit": {
            "$ref": "#/components/schemas/PaymentMethodBacsDebit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/PaymentMethodBancontact"
          },
          "billingDetails": {
            "$ref": "#/components/schemas/BillingDetails"
          },
          "card": {
            "$ref": "#/components/schemas/PaymentMethodCard"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/PaymentMethodCardPresent"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "eps": {
            "$ref": "#/components/schemas/PaymentMethodEps"
          },
          "fpx": {
            "$ref": "#/components/schemas/PaymentMethodFpx"
          },
          "giropay": {
            "$ref": "#/components/schemas/PaymentMethodGiropay"
          },
          "ideal": {
            "$ref": "#/components/schemas/PaymentMethodIdeal"
          },
          "interacPresent": {
            "$ref": "#/components/schemas/PaymentMethodInteracPresent"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "p24": {
            "$ref": "#/components/schemas/PaymentMethodP24"
          },
          "sepaDebit": {
            "$ref": "#/components/schemas/PaymentMethodSepaDebit"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "TaxRate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "inclusive": {
            "type": "boolean"
          },
          "jurisdiction": {
            "type": "string",
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "percentage": {
            "type": "number",
            "format": "double"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionItemBillingThresholds": {
        "type": "object",
        "properties": {
          "usageGte": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PackageDimensions": {
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "length": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "width": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "caption": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deactivateOn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "packageDimensions": {
            "$ref": "#/components/schemas/PackageDimensions"
          },
          "shippable": {
            "type": "boolean",
            "nullable": true
          },
          "statementDescriptor": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "unitLabel": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PlanTier": {
        "type": "object",
        "properties": {
          "flatAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "flatAmountDecimal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitAmountDecimal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "upTo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PlanTransformUsage": {
        "type": "object",
        "properties": {
          "divideBy": {
            "type": "integer",
            "format": "int64"
          },
          "round": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "aggregateUsage": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amountDecimal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "billingScheme": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "interval": {
            "type": "string",
            "nullable": true
          },
          "intervalCount": {
            "type": "integer",
            "format": "int64"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanTier"
            },
            "nullable": true
          },
          "tiersMode": {
            "type": "string",
            "nullable": true
          },
          "transformUsage": {
            "$ref": "#/components/schemas/PlanTransformUsage"
          },
          "trialPeriodDays": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "usageType": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PriceRecurring": {
        "type": "object",
        "properties": {
          "aggregateUsage": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "string",
            "nullable": true
          },
          "intervalCount": {
            "type": "integer",
            "format": "int64"
          },
          "trialPeriodDays": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "usageType": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PriceTier": {
        "type": "object",
        "properties": {
          "flatAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "flatAmountDecimal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitAmountDecimal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "upTo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PriceTransformQuantity": {
        "type": "object",
        "properties": {
          "divideBy": {
            "type": "integer",
            "format": "int64"
          },
          "round": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Price": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "billingScheme": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "lookupKey": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "recurring": {
            "$ref": "#/components/schemas/PriceRecurring"
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceTier"
            },
            "nullable": true
          },
          "tiersMode": {
            "type": "string",
            "nullable": true
          },
          "transformQuantity": {
            "$ref": "#/components/schemas/PriceTransformQuantity"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "unitAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitAmountDecimal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "billingThresholds": {
            "$ref": "#/components/schemas/SubscriptionItemBillingThresholds"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "subscription": {
            "type": "string",
            "nullable": true
          },
          "taxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRate"
            },
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionPauseCollection": {
        "type": "object",
        "properties": {
          "behavior": {
            "type": "string",
            "nullable": true
          },
          "resumesAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionPendingInvoiceItemInterval": {
        "type": "object",
        "properties": {
          "interval": {
            "type": "string",
            "nullable": true
          },
          "intervalCount": {
            "type": "integer",
            "format": "int64"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentNextActionRedirectToUrl": {
        "type": "object",
        "properties": {
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentNextAction": {
        "type": "object",
        "properties": {
          "redirectToUrl": {
            "$ref": "#/components/schemas/PaymentIntentNextActionRedirectToUrl"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentPaymentMethodOptionsBancontact": {
        "type": "object",
        "properties": {
          "preferredLanguage": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentPaymentMethodOptionsCardInstallmentsPlan": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "interval": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentPaymentMethodOptionsCardInstallments": {
        "type": "object",
        "properties": {
          "availablePlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentIntentPaymentMethodOptionsCardInstallmentsPlan"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "plan": {
            "$ref": "#/components/schemas/PaymentIntentPaymentMethodOptionsCardInstallmentsPlan"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentPaymentMethodOptionsCard": {
        "type": "object",
        "properties": {
          "installments": {
            "$ref": "#/components/schemas/PaymentIntentPaymentMethodOptionsCardInstallments"
          },
          "requestThreeDSecure": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentPaymentMethodOptions": {
        "type": "object",
        "properties": {
          "bancontact": {
            "$ref": "#/components/schemas/PaymentIntentPaymentMethodOptionsBancontact"
          },
          "card": {
            "$ref": "#/components/schemas/PaymentIntentPaymentMethodOptionsCard"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ReviewLocation": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ReviewSession": {
        "type": "object",
        "properties": {
          "browser": {
            "type": "string",
            "nullable": true
          },
          "device": {
            "type": "string",
            "nullable": true
          },
          "platform": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "billingZip": {
            "type": "string",
            "nullable": true
          },
          "chargeId": {
            "type": "string",
            "nullable": true
          },
          "charge": {
            "$ref": "#/components/schemas/Charge"
          },
          "closedReason": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "ipAddressLocation": {
            "$ref": "#/components/schemas/ReviewLocation"
          },
          "livemode": {
            "type": "boolean"
          },
          "open": {
            "type": "boolean"
          },
          "openedReason": {
            "type": "string",
            "nullable": true
          },
          "paymentIntentId": {
            "type": "string",
            "nullable": true
          },
          "paymentIntent": {
            "$ref": "#/components/schemas/PaymentIntent"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "session": {
            "$ref": "#/components/schemas/ReviewSession"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Shipping": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "carrier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentTransferData": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "destinationId": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "$ref": "#/components/schemas/Account"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "amountCapturable": {
            "type": "integer",
            "format": "int64"
          },
          "amountReceived": {
            "type": "integer",
            "format": "int64"
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "applicationFeeAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "canceledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancellationReason": {
            "type": "string",
            "nullable": true
          },
          "captureMethod": {
            "type": "string",
            "nullable": true
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Charge"
            },
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "confirmationMethod": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "string",
            "nullable": true
          },
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "lastPaymentError": {
            "$ref": "#/components/schemas/StripeError"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "nextAction": {
            "$ref": "#/components/schemas/PaymentIntentNextAction"
          },
          "onBehalfOfId": {
            "type": "string",
            "nullable": true
          },
          "onBehalfOf": {
            "$ref": "#/components/schemas/Account"
          },
          "paymentMethodId": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentMethodOptions": {
            "$ref": "#/components/schemas/PaymentIntentPaymentMethodOptions"
          },
          "paymentMethodTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "receiptEmail": {
            "type": "string",
            "nullable": true
          },
          "reviewId": {
            "type": "string",
            "nullable": true
          },
          "review": {
            "$ref": "#/components/schemas/Review"
          },
          "setupFutureUsage": {
            "type": "string",
            "nullable": true
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "sourceId": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/IPaymentSource"
          },
          "statementDescriptor": {
            "type": "string",
            "nullable": true
          },
          "statementDescriptorSuffix": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "transferData": {
            "$ref": "#/components/schemas/PaymentIntentTransferData"
          },
          "transferGroup": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "StripeError": {
        "type": "object",
        "properties": {
          "charge": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "declineCode": {
            "type": "string",
            "nullable": true
          },
          "docUrl": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "param": {
            "type": "string",
            "nullable": true
          },
          "paymentIntent": {
            "$ref": "#/components/schemas/PaymentIntent"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "setupIntent": {
            "$ref": "#/components/schemas/SetupIntent"
          },
          "source": {
            "$ref": "#/components/schemas/IPaymentSource"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errorDescription": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandateCustomerAcceptanceOffline": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandateCustomerAcceptanceOnline": {
        "type": "object",
        "properties": {
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "userAgent": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandateCustomerAcceptance": {
        "type": "object",
        "properties": {
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "offline": {
            "$ref": "#/components/schemas/MandateCustomerAcceptanceOffline"
          },
          "online": {
            "$ref": "#/components/schemas/MandateCustomerAcceptanceOnline"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandateMultiUse": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandatePaymentMethodDetailsAuBecsDebit": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandatePaymentMethodDetailsBacsDebit": {
        "type": "object",
        "properties": {
          "networkStatus": {
            "type": "integer",
            "format": "int64"
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandatePaymentMethodDetailsCard": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandatePaymentMethodDetailsSepaDebit": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandatePaymentMethodDetails": {
        "type": "object",
        "properties": {
          "auBecsDebit": {
            "$ref": "#/components/schemas/MandatePaymentMethodDetailsAuBecsDebit"
          },
          "bacsDebit": {
            "$ref": "#/components/schemas/MandatePaymentMethodDetailsBacsDebit"
          },
          "card": {
            "$ref": "#/components/schemas/MandatePaymentMethodDetailsCard"
          },
          "sepaDebit": {
            "$ref": "#/components/schemas/MandatePaymentMethodDetailsSepaDebit"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "MandateSingleUse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Mandate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "customerAcceptance": {
            "$ref": "#/components/schemas/MandateCustomerAcceptance"
          },
          "livemode": {
            "type": "boolean"
          },
          "multiUse": {
            "$ref": "#/components/schemas/MandateMultiUse"
          },
          "paymentMethodId": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentMethodDetails": {
            "$ref": "#/components/schemas/MandatePaymentMethodDetails"
          },
          "singleUse": {
            "$ref": "#/components/schemas/MandateSingleUse"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SetupIntentNextActionRedirectToUrl": {
        "type": "object",
        "properties": {
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SetupIntentNextAction": {
        "type": "object",
        "properties": {
          "redirectToUrl": {
            "$ref": "#/components/schemas/SetupIntentNextActionRedirectToUrl"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SetupIntentPaymentMethodOptionsCard": {
        "type": "object",
        "properties": {
          "requestThreeDSecure": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SetupIntentPaymentMethodOptions": {
        "type": "object",
        "properties": {
          "card": {
            "$ref": "#/components/schemas/SetupIntentPaymentMethodOptionsCard"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SetupIntent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "cancellationReason": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lastSetupError": {
            "$ref": "#/components/schemas/StripeError"
          },
          "livemode": {
            "type": "boolean"
          },
          "mandateId": {
            "type": "string",
            "nullable": true
          },
          "mandate": {
            "$ref": "#/components/schemas/Mandate"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "nextAction": {
            "$ref": "#/components/schemas/SetupIntentNextAction"
          },
          "onBehalfOfId": {
            "type": "string",
            "nullable": true
          },
          "onBehalfOf": {
            "$ref": "#/components/schemas/Account"
          },
          "paymentMethodId": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentMethodOptions": {
            "$ref": "#/components/schemas/SetupIntentPaymentMethodOptions"
          },
          "paymentMethodTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "singleUseMandateId": {
            "type": "string",
            "nullable": true
          },
          "singleUseMandate": {
            "$ref": "#/components/schemas/Mandate"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "usage": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionPendingUpdate": {
        "type": "object",
        "properties": {
          "billingCycleAnchor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItem"
            },
            "nullable": true
          },
          "trialEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "trialFromPlan": {
            "type": "boolean",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionScheduleCurrentPhase": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionScheduleInvoiceSettings": {
        "type": "object",
        "properties": {
          "daysUntilDue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionTransferData": {
        "type": "object",
        "properties": {
          "amountPercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "destinationId": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "$ref": "#/components/schemas/Account"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionScheduleDefaultSettings": {
        "type": "object",
        "properties": {
          "billingThresholds": {
            "$ref": "#/components/schemas/SubscriptionBillingThresholds"
          },
          "collectionMethod": {
            "type": "string",
            "nullable": true
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "nullable": true
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "invoiceSettings": {
            "$ref": "#/components/schemas/SubscriptionScheduleInvoiceSettings"
          },
          "transferData": {
            "$ref": "#/components/schemas/SubscriptionTransferData"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionSchedulePhaseAddInvoiceItem": {
        "type": "object",
        "properties": {
          "priceId": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionSchedulePhaseItem": {
        "type": "object",
        "properties": {
          "billingThresholds": {
            "$ref": "#/components/schemas/SubscriptionItemBillingThresholds"
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "priceId": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "taxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRate"
            },
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionSchedulePhase": {
        "type": "object",
        "properties": {
          "addInvoiceItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionSchedulePhaseAddInvoiceItem"
            },
            "nullable": true
          },
          "applicationFeePercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "billingThresholds": {
            "$ref": "#/components/schemas/SubscriptionBillingThresholds"
          },
          "collectionMethod": {
            "type": "string",
            "nullable": true
          },
          "couponId": {
            "type": "string",
            "nullable": true
          },
          "coupon": {
            "$ref": "#/components/schemas/Coupon"
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "nullable": true
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "defaultTaxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRate"
            },
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceSettings": {
            "$ref": "#/components/schemas/SubscriptionScheduleInvoiceSettings"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionSchedulePhaseItem"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taxPercent": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "deprecated": true
          },
          "transferData": {
            "$ref": "#/components/schemas/SubscriptionTransferData"
          },
          "trialEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "canceledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currentPhase": {
            "$ref": "#/components/schemas/SubscriptionScheduleCurrentPhase"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "defaultSettings": {
            "$ref": "#/components/schemas/SubscriptionScheduleDefaultSettings"
          },
          "endBehavior": {
            "type": "string",
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionSchedulePhase"
            },
            "nullable": true
          },
          "releasedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "releasedSubscription": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subscriptionId": {
            "type": "string",
            "nullable": true
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "applicationFeePercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "billingCycleAnchor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "billingThresholds": {
            "$ref": "#/components/schemas/SubscriptionBillingThresholds"
          },
          "cancelAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelAtPeriodEnd": {
            "type": "boolean"
          },
          "canceledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "collectionMethod": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currentPeriodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "currentPeriodStart": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "daysUntilDue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "nullable": true
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "defaultSourceId": {
            "type": "string",
            "nullable": true
          },
          "defaultSource": {
            "$ref": "#/components/schemas/IPaymentSource"
          },
          "defaultTaxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRate"
            },
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItem"
            },
            "nullable": true
          },
          "latestInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "latestInvoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "nextPendingInvoiceItemInvoice": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pauseCollection": {
            "$ref": "#/components/schemas/SubscriptionPauseCollection"
          },
          "pendingInvoiceItemInterval": {
            "$ref": "#/components/schemas/SubscriptionPendingInvoiceItemInterval"
          },
          "pendingSetupIntentId": {
            "type": "string",
            "nullable": true
          },
          "pendingSetupIntent": {
            "$ref": "#/components/schemas/SetupIntent"
          },
          "pendingUpdate": {
            "$ref": "#/components/schemas/SubscriptionPendingUpdate"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "scheduleId": {
            "type": "string",
            "nullable": true
          },
          "schedule": {
            "$ref": "#/components/schemas/SubscriptionSchedule"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "taxPercent": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "deprecated": true
          },
          "transferData": {
            "$ref": "#/components/schemas/SubscriptionTransferData"
          },
          "trialEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "trialStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Discount": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "coupon": {
            "$ref": "#/components/schemas/Coupon"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subscriptionId": {
            "type": "string",
            "nullable": true
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "InvoiceCustomField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "CustomerInvoiceSettings": {
        "type": "object",
        "properties": {
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceCustomField"
            },
            "nullable": true
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "nullable": true
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "footer": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "TaxIdVerification": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "verifiedAddress": {
            "type": "string",
            "nullable": true
          },
          "verifiedName": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "TaxId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "verification": {
            "$ref": "#/components/schemas/TaxIdVerification"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "balance": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "defaultSourceId": {
            "type": "string",
            "nullable": true
          },
          "defaultSource": {
            "$ref": "#/components/schemas/IPaymentSource"
          },
          "defaultSourceType": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "delinquent": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "invoicePrefix": {
            "type": "string",
            "nullable": true
          },
          "invoiceSettings": {
            "$ref": "#/components/schemas/CustomerInvoiceSettings"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nextInvoiceSequence": {
            "type": "integer",
            "format": "int64"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "preferredLocales": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IPaymentSource"
            },
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "nullable": true
          },
          "taxExempt": {
            "type": "string",
            "nullable": true
          },
          "taxIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxId"
            },
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "DisputeEvidence": {
        "type": "object",
        "properties": {
          "accessActivityLog": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "type": "string",
            "nullable": true
          },
          "cancellationPolicyId": {
            "type": "string",
            "nullable": true
          },
          "cancellationPolicy": {
            "$ref": "#/components/schemas/File"
          },
          "cancellationPolicyDisclosure": {
            "type": "string",
            "nullable": true
          },
          "cancellationRebuttal": {
            "type": "string",
            "nullable": true
          },
          "customerCommunicationId": {
            "type": "string",
            "nullable": true
          },
          "customerCommunication": {
            "$ref": "#/components/schemas/File"
          },
          "customerEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerPurchaseIp": {
            "type": "string",
            "nullable": true
          },
          "customerSignatureId": {
            "type": "string",
            "nullable": true
          },
          "customerSignature": {
            "$ref": "#/components/schemas/File"
          },
          "duplicateChargeDocumentationId": {
            "type": "string",
            "nullable": true
          },
          "duplicateChargeDocumentation": {
            "$ref": "#/components/schemas/File"
          },
          "duplicateChargeExplanation": {
            "type": "string",
            "nullable": true
          },
          "duplicateChargeId": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "receiptId": {
            "type": "string",
            "nullable": true
          },
          "receipt": {
            "$ref": "#/components/schemas/File"
          },
          "refundPolicyId": {
            "type": "string",
            "nullable": true
          },
          "refundPolicy": {
            "$ref": "#/components/schemas/File"
          },
          "refundPolicyDisclosure": {
            "type": "string",
            "nullable": true
          },
          "refundRefusalExplanation": {
            "type": "string",
            "nullable": true
          },
          "serviceDate": {
            "type": "string",
            "nullable": true
          },
          "serviceDocumentationId": {
            "type": "string",
            "nullable": true
          },
          "serviceDocumentation": {
            "$ref": "#/components/schemas/File"
          },
          "shippingAddress": {
            "type": "string",
            "nullable": true
          },
          "shippingCarrier": {
            "type": "string",
            "nullable": true
          },
          "shippingDate": {
            "type": "string",
            "nullable": true
          },
          "shippingDocumentationId": {
            "type": "string",
            "nullable": true
          },
          "shippingDocumentation": {
            "$ref": "#/components/schemas/File"
          },
          "shippingTrackingNumber": {
            "type": "string",
            "nullable": true
          },
          "uncategorizedFileId": {
            "type": "string",
            "nullable": true
          },
          "uncategorizedFile": {
            "$ref": "#/components/schemas/File"
          },
          "uncategorizedText": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "DisputeEvidenceDetails": {
        "type": "object",
        "properties": {
          "dueBy": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasEvidence": {
            "type": "boolean"
          },
          "pastDue": {
            "type": "boolean"
          },
          "submissionCount": {
            "type": "integer",
            "format": "int64"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Dispute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "balanceTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceTransaction"
            },
            "nullable": true
          },
          "chargeId": {
            "type": "string",
            "nullable": true
          },
          "charge": {
            "$ref": "#/components/schemas/Charge"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "evidence": {
            "$ref": "#/components/schemas/DisputeEvidence"
          },
          "evidenceDetails": {
            "$ref": "#/components/schemas/DisputeEvidenceDetails"
          },
          "isChargeRefundable": {
            "type": "boolean"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "networkReasonCode": {
            "type": "string",
            "nullable": true
          },
          "paymentIntentId": {
            "type": "string",
            "nullable": true
          },
          "paymentIntent": {
            "$ref": "#/components/schemas/PaymentIntent"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargeFraudDetails": {
        "type": "object",
        "properties": {
          "stripeReport": {
            "type": "string",
            "nullable": true
          },
          "userReport": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargeLevel3LineItem": {
        "type": "object",
        "properties": {
          "discountAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "taxAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitCost": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargeLevel3": {
        "type": "object",
        "properties": {
          "customerReference": {
            "type": "string",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargeLevel3LineItem"
            },
            "nullable": true
          },
          "merchantReference": {
            "type": "string",
            "nullable": true
          },
          "shippingAddressZip": {
            "type": "string",
            "nullable": true
          },
          "shippingAmount": {
            "type": "integer",
            "format": "int64"
          },
          "shippingFromZip": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "SkuInventory": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Sku": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "inventory": {
            "$ref": "#/components/schemas/SkuInventory"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "packageDimensions": {
            "$ref": "#/components/schemas/PackageDimensions"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/Sku"
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Transfer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "amountReversed": {
            "type": "integer",
            "format": "int64"
          },
          "balanceTransactionId": {
            "type": "string",
            "nullable": true
          },
          "balanceTransaction": {
            "$ref": "#/components/schemas/BalanceTransaction"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "destinationId": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "$ref": "#/components/schemas/Account"
          },
          "destinationPaymentId": {
            "type": "string",
            "nullable": true
          },
          "destinationPayment": {
            "$ref": "#/components/schemas/Charge"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "reversals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferReversal"
            },
            "nullable": true
          },
          "reversed": {
            "type": "boolean"
          },
          "sourceTransactionId": {
            "type": "string",
            "nullable": true
          },
          "sourceTransaction": {
            "$ref": "#/components/schemas/Charge"
          },
          "sourceType": {
            "type": "string",
            "nullable": true
          },
          "transferGroup": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "TransferReversal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "balanceTransactionId": {
            "type": "string",
            "nullable": true
          },
          "balanceTransaction": {
            "$ref": "#/components/schemas/BalanceTransaction"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "destinationPaymentRefundId": {
            "type": "string",
            "nullable": true
          },
          "destinationPaymentRefund": {
            "$ref": "#/components/schemas/Refund"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "sourceRefundId": {
            "type": "string",
            "nullable": true
          },
          "sourceRefund": {
            "$ref": "#/components/schemas/Refund"
          },
          "transferId": {
            "type": "string",
            "nullable": true
          },
          "transfer": {
            "$ref": "#/components/schemas/Transfer"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Refund": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "balanceTransactionId": {
            "type": "string",
            "nullable": true
          },
          "balanceTransaction": {
            "$ref": "#/components/schemas/BalanceTransaction"
          },
          "chargeId": {
            "type": "string",
            "nullable": true
          },
          "charge": {
            "$ref": "#/components/schemas/Charge"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "failureBalanceTransactionId": {
            "type": "string",
            "nullable": true
          },
          "failureBalanceTransaction": {
            "$ref": "#/components/schemas/BalanceTransaction"
          },
          "failureReason": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "paymentIntentId": {
            "type": "string",
            "nullable": true
          },
          "paymentIntent": {
            "$ref": "#/components/schemas/PaymentIntent"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "receiptNumber": {
            "type": "string",
            "nullable": true
          },
          "sourceTransferReversalId": {
            "type": "string",
            "nullable": true
          },
          "sourceTransferReversal": {
            "$ref": "#/components/schemas/TransferReversal"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "transferReversalId": {
            "type": "string",
            "nullable": true
          },
          "transferReversal": {
            "$ref": "#/components/schemas/TransferReversal"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "OrderReturn": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "refundId": {
            "type": "string",
            "nullable": true
          },
          "refund": {
            "$ref": "#/components/schemas/Refund"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "OrderShippingMethodDeliveryEstimate": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "nullable": true
          },
          "earliest": {
            "type": "string",
            "nullable": true
          },
          "latest": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "OrderShippingMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "deliveryEstimate": {
            "$ref": "#/components/schemas/OrderShippingMethodDeliveryEstimate"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "OrderStatusTransitions": {
        "type": "object",
        "properties": {
          "canceled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fulfiled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paid": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "returned": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "amountReturned": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "application": {
            "type": "string",
            "nullable": true
          },
          "applicationFee": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chargeId": {
            "type": "string",
            "nullable": true
          },
          "charge": {
            "$ref": "#/components/schemas/Charge"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "externalCouponCode": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "returns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderReturn"
            },
            "nullable": true
          },
          "selectedShippingMethod": {
            "type": "string",
            "nullable": true
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "shippingMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderShippingMethod"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "statusTransitions": {
            "$ref": "#/components/schemas/OrderStatusTransitions"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "upstreamId": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Rule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "predicate": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargeOutcome": {
        "type": "object",
        "properties": {
          "networkStatus": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "riskLevel": {
            "type": "string",
            "nullable": true
          },
          "riskScore": {
            "type": "integer",
            "format": "int64"
          },
          "ruleId": {
            "type": "string",
            "nullable": true
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "sellerMessage": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsAchCreditTransfer": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "routingNumber": {
            "type": "string",
            "nullable": true
          },
          "swiftCode": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsAchDebit": {
        "type": "object",
        "properties": {
          "accountHolderType": {
            "type": "string",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "routingNumber": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsAcssDebit": {
        "type": "object",
        "properties": {
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "institutionNumber": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "mandate": {
            "type": "string",
            "nullable": true
          },
          "transitNumber": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsAlipay": {
        "type": "object",
        "properties": {
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsAuBecsDebit": {
        "type": "object",
        "properties": {
          "bsbNumber": {
            "type": "string",
            "nullable": true
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "mandate": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsBacsDebit": {
        "type": "object",
        "properties": {
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "mandate": {
            "type": "string",
            "nullable": true
          },
          "sortCode": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsBancontact": {
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "bic": {
            "type": "string",
            "nullable": true
          },
          "ibanLast4": {
            "type": "string",
            "nullable": true
          },
          "preferredLanguage": {
            "type": "string",
            "nullable": true
          },
          "verifiedName": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsBitcoin": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "amountCharged": {
            "type": "integer",
            "format": "int64"
          },
          "amountReceived": {
            "type": "integer",
            "format": "int64"
          },
          "amountReturned": {
            "type": "integer",
            "format": "int64"
          },
          "refundAddress": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardChecks": {
        "type": "object",
        "properties": {
          "addressLine1Check": {
            "type": "string",
            "nullable": true
          },
          "addressPostalCodeCheck": {
            "type": "string",
            "nullable": true
          },
          "cvcCheck": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardInstallments": {
        "type": "object",
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/PaymentIntentPaymentMethodOptionsCardInstallmentsPlan"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardThreeDSecure": {
        "type": "object",
        "properties": {
          "authenticated": {
            "type": "boolean"
          },
          "authenticationFlow": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "resultReason": {
            "type": "string",
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardWalletAmexExpressCheckout": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardWalletApplePay": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardWalletGooglePay": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardWalletMasterpass": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardWalletSamsungPay": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardWalletVisaCheckout": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardWallet": {
        "type": "object",
        "properties": {
          "amexExpressCheckout": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardWalletAmexExpressCheckout"
          },
          "applePay": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardWalletApplePay"
          },
          "dynamicLast4": {
            "type": "string",
            "nullable": true
          },
          "googlePay": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardWalletGooglePay"
          },
          "masterpass": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardWalletMasterpass"
          },
          "samsungPay": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardWalletSamsungPay"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "visaCheckout": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardWalletVisaCheckout"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCard": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "nullable": true
          },
          "checks": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardChecks"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "expMonth": {
            "type": "integer",
            "format": "int64"
          },
          "expYear": {
            "type": "integer",
            "format": "int64"
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "funding": {
            "type": "string",
            "nullable": true
          },
          "iin": {
            "type": "string",
            "nullable": true
          },
          "installments": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardInstallments"
          },
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "moto": {
            "type": "boolean",
            "nullable": true
          },
          "network": {
            "type": "string",
            "nullable": true
          },
          "threeDSecure": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardThreeDSecure"
          },
          "wallet": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardWallet"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardPresentReceipt": {
        "type": "object",
        "properties": {
          "applicationCryptogram": {
            "type": "string",
            "nullable": true
          },
          "applicationPreferredName": {
            "type": "string",
            "nullable": true
          },
          "authorizationCode": {
            "type": "string",
            "nullable": true
          },
          "authorizationResponseCode": {
            "type": "string",
            "nullable": true
          },
          "cardholderVerificationMethod": {
            "type": "string",
            "nullable": true
          },
          "dedicatedFileName": {
            "type": "string",
            "nullable": true
          },
          "terminalVerificationResults": {
            "type": "string",
            "nullable": true
          },
          "transactionStatusInformation": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsCardPresent": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "nullable": true
          },
          "cardholderName": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "emvAuthData": {
            "type": "string",
            "nullable": true
          },
          "expMonth": {
            "type": "integer",
            "format": "int64"
          },
          "expYear": {
            "type": "integer",
            "format": "int64"
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "funding": {
            "type": "string",
            "nullable": true
          },
          "generatedCard": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "network": {
            "type": "string",
            "nullable": true
          },
          "readMethod": {
            "type": "string",
            "nullable": true
          },
          "receipt": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardPresentReceipt"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsEps": {
        "type": "object",
        "properties": {
          "verifiedName": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsFpx": {
        "type": "object",
        "properties": {
          "accountHolderType": {
            "type": "string",
            "nullable": true
          },
          "bank": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsGiropay": {
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "bic": {
            "type": "string",
            "nullable": true
          },
          "verifiedName": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsIdeal": {
        "type": "object",
        "properties": {
          "bank": {
            "type": "string",
            "nullable": true
          },
          "bic": {
            "type": "string",
            "nullable": true
          },
          "ibanLast4": {
            "type": "string",
            "nullable": true
          },
          "verifiedName": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsInteracPresentReceipt": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "nullable": true
          },
          "applicationCryptogram": {
            "type": "string",
            "nullable": true
          },
          "applicationPreferredName": {
            "type": "string",
            "nullable": true
          },
          "authorizationCode": {
            "type": "string",
            "nullable": true
          },
          "authorizationResponseCode": {
            "type": "string",
            "nullable": true
          },
          "cardholderVerificationMethod": {
            "type": "string",
            "nullable": true
          },
          "dedicatedFileName": {
            "type": "string",
            "nullable": true
          },
          "terminalVerificationResults": {
            "type": "string",
            "nullable": true
          },
          "transactionStatusInformation": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsInteracPresent": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "nullable": true
          },
          "cardholderName": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "emvAuthData": {
            "type": "string",
            "nullable": true
          },
          "expMonth": {
            "type": "integer",
            "format": "int64"
          },
          "expYear": {
            "type": "integer",
            "format": "int64"
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "funding": {
            "type": "string",
            "nullable": true
          },
          "generatedCard": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "network": {
            "type": "string",
            "nullable": true
          },
          "readMethod": {
            "type": "string",
            "nullable": true
          },
          "receipt": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsInteracPresentReceipt"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsKlarna": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsMultibanco": {
        "type": "object",
        "properties": {
          "entity": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsP24": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "verifiedName": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsSepaDebit": {
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsStripeAccount": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetailsWechat": {
        "type": "object",
        "properties": {
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargePaymentMethodDetails": {
        "type": "object",
        "properties": {
          "achCreditTransfer": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsAchCreditTransfer"
          },
          "achDebit": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsAchDebit"
          },
          "acssDebit": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsAcssDebit"
          },
          "alipay": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsAlipay"
          },
          "auBecsDebit": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsAuBecsDebit"
          },
          "bacsDebit": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsBacsDebit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsBancontact"
          },
          "bitcoin": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsBitcoin"
          },
          "card": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCard"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsCardPresent"
          },
          "eps": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsEps"
          },
          "fpx": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsFpx"
          },
          "giropay": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsGiropay"
          },
          "ideal": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsIdeal"
          },
          "interacPresent": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsInteracPresent"
          },
          "klarna": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsKlarna"
          },
          "multibanco": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsMultibanco"
          },
          "p24": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsP24"
          },
          "sepaDebit": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsSepaDebit"
          },
          "stripeAccount": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsStripeAccount"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "wechat": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetailsWechat"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "ChargeTransferData": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "destinationId": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "$ref": "#/components/schemas/Account"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Charge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "amountRefunded": {
            "type": "integer",
            "format": "int64"
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "applicationFeeId": {
            "type": "string",
            "nullable": true
          },
          "applicationFee": {
            "$ref": "#/components/schemas/ApplicationFee"
          },
          "applicationFeeAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "authorizationCode": {
            "type": "string",
            "nullable": true
          },
          "balanceTransactionId": {
            "type": "string",
            "nullable": true
          },
          "balanceTransaction": {
            "$ref": "#/components/schemas/BalanceTransaction"
          },
          "billingDetails": {
            "$ref": "#/components/schemas/BillingDetails"
          },
          "calculatedStatementDescriptor": {
            "type": "string",
            "nullable": true
          },
          "captured": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "destinationId": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "$ref": "#/components/schemas/Account"
          },
          "disputeId": {
            "type": "string",
            "nullable": true
          },
          "dispute": {
            "$ref": "#/components/schemas/Dispute"
          },
          "disputed": {
            "type": "boolean"
          },
          "failureCode": {
            "type": "string",
            "nullable": true
          },
          "failureMessage": {
            "type": "string",
            "nullable": true
          },
          "fraudDetails": {
            "$ref": "#/components/schemas/ChargeFraudDetails"
          },
          "invoiceId": {
            "type": "string",
            "nullable": true
          },
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "level3": {
            "$ref": "#/components/schemas/ChargeLevel3"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "onBehalfOfId": {
            "type": "string",
            "nullable": true
          },
          "onBehalfOf": {
            "$ref": "#/components/schemas/Account"
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "outcome": {
            "$ref": "#/components/schemas/ChargeOutcome"
          },
          "paid": {
            "type": "boolean"
          },
          "paymentIntentId": {
            "type": "string",
            "nullable": true
          },
          "paymentIntent": {
            "$ref": "#/components/schemas/PaymentIntent"
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodDetails": {
            "$ref": "#/components/schemas/ChargePaymentMethodDetails"
          },
          "receiptEmail": {
            "type": "string",
            "nullable": true
          },
          "receiptNumber": {
            "type": "string",
            "nullable": true
          },
          "receiptUrl": {
            "type": "string",
            "nullable": true
          },
          "refunded": {
            "type": "boolean"
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Refund"
            },
            "nullable": true
          },
          "reviewId": {
            "type": "string",
            "nullable": true
          },
          "review": {
            "$ref": "#/components/schemas/Review"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "source": {
            "$ref": "#/components/schemas/IPaymentSource"
          },
          "sourceTransferId": {
            "type": "string",
            "nullable": true
          },
          "sourceTransfer": {
            "$ref": "#/components/schemas/Transfer"
          },
          "statementDescriptor": {
            "type": "string",
            "nullable": true
          },
          "statementDescriptorSuffix": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "transferId": {
            "type": "string",
            "nullable": true
          },
          "transfer": {
            "$ref": "#/components/schemas/Transfer"
          },
          "transferData": {
            "$ref": "#/components/schemas/ChargeTransferData"
          },
          "transferGroup": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "InvoiceCustomerTaxId": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Period": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "InvoiceTaxAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "inclusive": {
            "type": "boolean"
          },
          "taxRateId": {
            "type": "string",
            "nullable": true
          },
          "taxRate": {
            "$ref": "#/components/schemas/TaxRate"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discountable": {
            "type": "boolean"
          },
          "invoiceItem": {
            "type": "string",
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "period": {
            "$ref": "#/components/schemas/Period"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "proration": {
            "type": "boolean"
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "subscription": {
            "type": "string",
            "nullable": true
          },
          "subscriptionItem": {
            "type": "string",
            "nullable": true
          },
          "taxAmounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceTaxAmount"
            },
            "nullable": true
          },
          "taxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRate"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "unifiedProration": {
            "type": "boolean"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "InvoiceStatusTransitions": {
        "type": "object",
        "properties": {
          "finalizedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "markedUncollectibleAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paidAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "voidedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "InvoiceThresholdReasonItemReason": {
        "type": "object",
        "properties": {
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "usageGte": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "InvoiceThresholdReason": {
        "type": "object",
        "properties": {
          "amountGte": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "itemReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceThresholdReasonItemReason"
            },
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "InvoiceTransferData": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "destinationId": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "$ref": "#/components/schemas/Account"
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "accountCountry": {
            "type": "string",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "amountDue": {
            "type": "integer",
            "format": "int64"
          },
          "amountPaid": {
            "type": "integer",
            "format": "int64"
          },
          "amountRemaining": {
            "type": "integer",
            "format": "int64"
          },
          "applicationFeeAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "attemptCount": {
            "type": "integer",
            "format": "int64"
          },
          "attempted": {
            "type": "boolean"
          },
          "autoAdvance": {
            "type": "boolean"
          },
          "billingReason": {
            "type": "string",
            "nullable": true
          },
          "chargeId": {
            "type": "string",
            "nullable": true
          },
          "charge": {
            "$ref": "#/components/schemas/Charge"
          },
          "collectionMethod": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceCustomField"
            },
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "customerEmail": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerShipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "customerTaxExempt": {
            "type": "string",
            "nullable": true
          },
          "customerTaxIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceCustomerTaxId"
            },
            "nullable": true
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "nullable": true
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "defaultSourceId": {
            "type": "string",
            "nullable": true
          },
          "defaultSource": {
            "$ref": "#/components/schemas/IPaymentSource"
          },
          "defaultTaxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRate"
            },
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endingBalance": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "footer": {
            "type": "string",
            "nullable": true
          },
          "hostedInvoiceUrl": {
            "type": "string",
            "nullable": true
          },
          "invoicePdf": {
            "type": "string",
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            },
            "nullable": true
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "nextPaymentAttempt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "paid": {
            "type": "boolean"
          },
          "paymentIntentId": {
            "type": "string",
            "nullable": true
          },
          "paymentIntent": {
            "$ref": "#/components/schemas/PaymentIntent"
          },
          "periodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "periodStart": {
            "type": "string",
            "format": "date-time"
          },
          "postPaymentCreditNotesAmount": {
            "type": "integer",
            "format": "int64"
          },
          "prePaymentCreditNotesAmount": {
            "type": "integer",
            "format": "int64"
          },
          "receiptNumber": {
            "type": "string",
            "nullable": true
          },
          "startingBalance": {
            "type": "integer",
            "format": "int64"
          },
          "statementDescriptor": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "statusTransitions": {
            "$ref": "#/components/schemas/InvoiceStatusTransitions"
          },
          "subscriptionId": {
            "type": "string",
            "nullable": true
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "subscriptionProrationDate": {
            "type": "string",
            "format": "date-time"
          },
          "subtotal": {
            "type": "integer",
            "format": "int64"
          },
          "tax": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "taxPercent": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "deprecated": true
          },
          "thresholdReason": {
            "$ref": "#/components/schemas/InvoiceThresholdReason"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "totalTaxAmounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceTaxAmount"
            },
            "nullable": true
          },
          "transferData": {
            "$ref": "#/components/schemas/InvoiceTransferData"
          },
          "webhooksDeliveredAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rawJObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true,
            "readOnly": true
          },
          "stripeResponse": {
            "$ref": "#/components/schemas/StripeResponse"
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "DataRefreshSchedule": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "cronSchedules": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "weekDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstancePrivacy": {
        "type": "object",
        "properties": {
          "privacyId": {
            "type": "string",
            "nullable": true
          },
          "privacyDomain": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Instance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "dataRefreshSchedule": {
            "$ref": "#/components/schemas/DataRefreshSchedule"
          },
          "instancePrivacy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstancePrivacy"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataFactory": {
        "type": "object",
        "properties": {
          "resourceGroup": {
            "type": "string",
            "nullable": true
          },
          "dataFactoryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureDataLakeGen2Settings": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountKey": {
            "type": "string",
            "nullable": true
          },
          "containerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureCognitiveSearchSettings": {
        "type": "object",
        "properties": {
          "searchServiceName": {
            "type": "string",
            "nullable": true
          },
          "searchServiceAdminKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatabricksADLSGen2AppSettings": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "appId": {
            "type": "string",
            "nullable": true
          },
          "appSecret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppSetting": {
        "type": "object",
        "properties": {
          "dataFactory": {
            "$ref": "#/components/schemas/DataFactory"
          },
          "azureDataLakeGen2Settings": {
            "$ref": "#/components/schemas/AzureDataLakeGen2Settings"
          },
          "azureCognitiveSearchSettings": {
            "$ref": "#/components/schemas/AzureCognitiveSearchSettings"
          },
          "databricksADLSGen2AppSettings": {
            "$ref": "#/components/schemas/DatabricksADLSGen2AppSettings"
          }
        },
        "additionalProperties": false
      },
      "Tenant": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "websiteUrl": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isResourceCreated": {
            "type": "boolean"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Instance"
            },
            "nullable": true
          },
          "appSetting": {
            "$ref": "#/components/schemas/AppSetting"
          },
          "xdmDatabase": {
            "type": "string",
            "nullable": true
          },
          "powerAppsEnvironmentId": {
            "type": "string",
            "nullable": true
          },
          "isSkyPointDefaultSettings": {
            "type": "boolean"
          },
          "stripeCustomerId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Tenant"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodOptions": {
        "required": [
          "addressLine1",
          "city",
          "country",
          "name",
          "postalCode",
          "state"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BillingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckoutSessionRequest": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "string",
            "nullable": true
          },
          "successUrl": {
            "type": "string",
            "nullable": true
          },
          "cancelUrl": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckoutSessionResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePlanBySessionRequest": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePlanByIdRequest": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkImportResponseData": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "numberOfRecordImported": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "readWriteTimeInSecond": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "writeTimeInSecond": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportTaskResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChannelType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ScheduleFrequency": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "PipelineScheduleTrigger": {
        "required": [
          "frequency"
        ],
        "type": "object",
        "properties": {
          "frequency": {
            "$ref": "#/components/schemas/ScheduleFrequency"
          },
          "minuteInterval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hourInterval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "time": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "weekDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "nullable": true
          },
          "day": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "monthDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "occurrence": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Channel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hostname": {
            "type": "string",
            "nullable": true
          },
          "instrumentationKey": {
            "type": "string",
            "nullable": true
          },
          "appId": {
            "type": "string",
            "nullable": true
          },
          "domainId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/ChannelType"
          },
          "visitorCount": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "pipelineScheduleTrigger": {
            "$ref": "#/components/schemas/PipelineScheduleTrigger"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Domain": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Channel"
            },
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveDomainRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DomainResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Domain"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveChannelRequest": {
        "required": [
          "domainId",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hostname": {
            "type": "string",
            "nullable": true
          },
          "appId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ChannelType"
          },
          "domainId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ChannelResponse": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/Channel"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "activityId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "runId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "detailedDescription": {
            "type": "string",
            "nullable": true
          },
          "lastRefresh": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsentFlag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isEnable": {
            "type": "boolean"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsentFlagRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsentFlagResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ConsentFlag"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavePreferenceRequest": {
        "type": "object",
        "properties": {
          "consentFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentFlag"
            },
            "nullable": true
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsentManagementContent": {
        "type": "object",
        "properties": {
          "htmlContent": {
            "type": "string",
            "nullable": true
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsentManagementContentResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ConsentManagementContent"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AudienceDashboardData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "entityCount": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardModel": {
        "type": "object",
        "properties": {
          "audiences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceDashboardData"
            },
            "nullable": true
          },
          "skyPointLinkConfiguration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardHeaderStat": {
        "type": "object",
        "properties": {
          "totalProfiles": {
            "type": "integer",
            "format": "int64"
          },
          "totalAudiences": {
            "type": "integer",
            "format": "int64"
          },
          "totalMetrics": {
            "type": "integer",
            "format": "int64"
          },
          "totalOpenDSR": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AttributeSemanticInformation": {
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "mlLabel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatasourceEntityInformation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "primaryKey": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "timestampFieldName": {
            "type": "string",
            "nullable": true
          },
          "semanticLabels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeSemanticInformation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partition": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "refreshTime": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Entity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            },
            "nullable": true
          },
          "partitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Partition"
            },
            "nullable": true
          },
          "associations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Association"
            },
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "primaryKey": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastRefreshDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Model": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "modifiedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Entity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataFlowInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "modelUrl": {
            "type": "string",
            "nullable": true
          },
          "configuredBy": {
            "type": "string",
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "entityInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatasourceEntityInformation"
            },
            "nullable": true
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          },
          "audienceMembers": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastRunId": {
            "type": "string",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastRefreshDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Option": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectorProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isCredential": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "inputType": {
            "type": "string",
            "nullable": true
          },
          "optionalValue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Option"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Connector": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "kind": {
            "type": "string",
            "nullable": true
          },
          "iconClass": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectorProperties"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "isIncrementalSupported": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "downloadUrl": {
            "type": "string",
            "nullable": true
          },
          "eraseUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataflowRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "connector": {
            "$ref": "#/components/schemas/Connector"
          }
        },
        "additionalProperties": false
      },
      "DataFlowResponse": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/DataFlowInfo"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataflowAdvancedSetting": {
        "type": "object",
        "properties": {
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "dsrProcessingMode": {
            "type": "string",
            "nullable": true
          },
          "subjectTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataflowAdvancedSettingRequest": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "dsrProcessingMode": {
            "type": "string",
            "nullable": true
          },
          "subjectTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dataProcessingActivities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataflowAdvancedSettingResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DataflowAdvancedSetting"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectorSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "connector": {
            "$ref": "#/components/schemas/Connector"
          }
        },
        "additionalProperties": false
      },
      "ScheduleTriggerResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PipelineScheduleTrigger"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dataFlowId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "sourceName": {
            "type": "string",
            "nullable": true
          },
          "modelurl": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastRefreshTime": {
            "type": "string",
            "format": "date-time"
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            },
            "nullable": true
          },
          "partitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Partition"
            },
            "nullable": true
          },
          "schemaDescription": {
            "type": "string",
            "nullable": true
          },
          "primaryKey": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastRefreshDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "associations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Association"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "audienceMemberCount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AWSS3Request": {
        "type": "object",
        "properties": {
          "accessKey": {
            "type": "string",
            "nullable": true
          },
          "secretKey": {
            "type": "string",
            "nullable": true
          },
          "bucketName": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AWSFileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AWSFileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AWSFileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopifyRequest": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "nullable": true
          },
          "apiPassword": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopifyFileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "isQueryEditor": {
            "type": "boolean"
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ShopifyFileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopifyFileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CampaignMonitorRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CampaignMonitorFileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          },
          "connectorType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CampaignMonitorFileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMonitorFileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KlaviyoRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KlaviyoFileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          },
          "connectorType": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KlaviyoFileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KlaviyoFileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesforceRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "securityToken": {
            "type": "string",
            "nullable": true
          },
          "environmentURL": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesforceFileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "isQueryEditor": {
            "type": "boolean"
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SalesforceFileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesforceFileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureStorageRequest": {
        "type": "object",
        "properties": {
          "storageName": {
            "type": "string",
            "nullable": true
          },
          "accountKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "containerName": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureStorageFolderList": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "directoryList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureStorageFileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AzureStorageFileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureStorageFileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdlsGen1StorageRequest": {
        "type": "object",
        "properties": {
          "storageUrl": {
            "type": "string",
            "nullable": true
          },
          "containerName": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesforceMarketingCloudRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "authenticationUrl": {
            "type": "string",
            "nullable": true
          },
          "restInstanceUrl": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesforceMarketingCloudFileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "isQueryEditor": {
            "type": "boolean"
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          },
          "connectorType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesforceMarketingCloudFileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesforceMarketingCloudFileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntitySchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "connectorType": {
            "type": "string",
            "nullable": true
          },
          "lastRefreshDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EventSchema": {
        "type": "object",
        "properties": {
          "eventTye": {
            "type": "string",
            "nullable": true
          },
          "lastRefreshDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SFMCRunEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "objectid": {
            "type": "string",
            "format": "uuid"
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitySchema"
            },
            "nullable": true
          },
          "event": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSchema"
            },
            "nullable": true
          },
          "activityStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "activityEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SurveyMonkeyRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SurveyMonkeyFileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "isQueryEditor": {
            "type": "boolean"
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          },
          "connectorType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SurveyMonkeyFileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyMonkeyFileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dynamics365Request": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "domainUrl": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dynamics365FileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "isQueryEditor": {
            "type": "boolean"
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Dynamics365FileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dynamics365FileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RedshiftRequest": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "nullable": true
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "portNumber": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RedshiftFileList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "tableSchema": {
            "type": "string",
            "nullable": true
          },
          "tableType": {
            "type": "string",
            "nullable": true
          },
          "fileDetailsPath": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "delimiter": {
            "type": "string",
            "nullable": true
          },
          "datetimeFormat": {
            "type": "string",
            "nullable": true
          },
          "isFirstRowAsHeader": {
            "type": "boolean"
          },
          "isQueryEditor": {
            "type": "boolean"
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "compressionType": {
            "type": "string",
            "nullable": true
          },
          "rowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "escapeCharacter": {
            "type": "string",
            "nullable": true
          },
          "quoteCharacter": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          },
          "connectorType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RedshiftFileListDataflowFileListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "fileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RedshiftFileList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataMapDataFlow": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "connectorName": {
            "type": "string",
            "nullable": true
          },
          "connectorIconClass": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataMapMetaData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataFlows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataMapDataFlow"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PIIMapDataflow": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataMapAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "type": "boolean"
          },
          "erasure": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DataMapEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "type": "boolean"
          },
          "erasure": {
            "type": "boolean"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataMapAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PIIMapRequest": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataMapEntity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PIIMap": {
        "type": "object",
        "properties": {
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataMapEntity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PIIMapResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PIIMap"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataProcessingActivity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "phases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dataflows": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "requiredConsent": {
            "type": "boolean"
          },
          "subjectsConsented": {
            "type": "integer",
            "format": "int32"
          },
          "subjectsObjected": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataProcessingActivityRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "phases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dataflows": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "requiredConsent": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DataProcessingActivityResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DataProcessingActivity"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataSubject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          },
          "residentType": {
            "type": "string",
            "nullable": true
          },
          "subjectType": {
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "requestDetails": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "rejectReason": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "responseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "identityVerificationType": {
            "type": "string",
            "nullable": true
          },
          "identityVerificationStatus": {
            "type": "string",
            "nullable": true
          },
          "downloadUrl": {
            "type": "string",
            "nullable": true
          },
          "completedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataSubjectResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DataSubject"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RejectRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyCenterChartData": {
        "type": "object",
        "properties": {
          "openDSRTypeData": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "openVsCloseDSRData": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UploadLogo": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UploadLogoResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendEmailModel": {
        "type": "object",
        "properties": {
          "bodyContent": {
            "type": "string",
            "nullable": true
          },
          "toEmail": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "feedbackLevel": {
            "type": "string",
            "nullable": true
          },
          "isRequiredReply": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EmailResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExportStorageType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExportEntityMetadata": {
        "type": "object",
        "properties": {
          "datasourceId": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "sourceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExportMetadata": {
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/ExportStorageType"
          },
          "containerName": {
            "type": "string",
            "nullable": true
          },
          "storageAccountName": {
            "type": "string",
            "nullable": true
          },
          "accountKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "bucketName": {
            "type": "string",
            "nullable": true
          },
          "accessKey": {
            "type": "string",
            "nullable": true
          },
          "secretAccessKey": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "encryption": {
            "type": "string",
            "nullable": true
          },
          "lastRunId": {
            "type": "string",
            "nullable": true
          },
          "lastExportedDate": {
            "type": "string",
            "format": "date-time"
          },
          "exportEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportEntityMetadata"
            },
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveExportRequest": {
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/ExportStorageType"
          },
          "containerName": {
            "type": "string",
            "nullable": true
          },
          "storageAccountName": {
            "type": "string",
            "nullable": true
          },
          "accountKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 64,
            "minLength": 3,
            "pattern": "^[a-zA-Z][a-zA-Z0-9]+$",
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "bucketName": {
            "type": "string",
            "nullable": true
          },
          "accessKey": {
            "type": "string",
            "nullable": true
          },
          "secretAccessKey": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "encryption": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "exportEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportEntityMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExportResponse": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/ExportMetadata"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RunExportRequest": {
        "type": "object",
        "properties": {
          "exportIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveInstanceRequest": {
        "required": [
          "currency",
          "dateandNumberFormat",
          "displayName",
          "language",
          "name",
          "timezone",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 3,
            "pattern": "^[a-zA-Z][a-zA-Z0-9]+$",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "dateandNumberFormat": {
            "type": "string"
          },
          "cdmPartitionCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InstanceResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Instance"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstanceDefault": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "dateandNumberFormat": {
            "type": "string",
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "cdmPartitionCount": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveInstanceDefault": {
        "required": [
          "currency",
          "dateandNumberFormat",
          "language",
          "timezone"
        ],
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "dateandNumberFormat": {
            "type": "string"
          },
          "cdmPartitionCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InstanceDefaultResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InstanceDefault"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataRefreshScheduleRequest": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "cronSchedules": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "weekDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatricState": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "MatricKind": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "MetricLinkedEntityKind": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "MetricLinkedEntity": {
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/MetricLinkedEntityKind"
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "sourceName": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "associationName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricVarialbeKind": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "MetricVariable": {
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/MetricVarialbeKind"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "expressionText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatricExpressionKind": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25
        ],
        "type": "integer",
        "format": "int32"
      },
      "MetricExpression": {
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/MatricExpressionKind"
          }
        },
        "additionalProperties": false
      },
      "BucketType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "MetricDimension": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "bucket": {
            "$ref": "#/components/schemas/BucketType"
          },
          "isReadOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OperationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "MetricAggregate": {
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/OperationType"
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "entityAlias": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MetricDefinitionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "MetricDefinition": {
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/MatricKind"
          },
          "isScalar": {
            "type": "boolean"
          },
          "linkedEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricLinkedEntity"
            },
            "nullable": true
          },
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricVariable"
            },
            "nullable": true
          },
          "filters": {
            "$ref": "#/components/schemas/MetricExpression"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricDimension"
            },
            "nullable": true
          },
          "aggregates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricAggregate"
            },
            "nullable": true
          },
          "isProfile": {
            "type": "boolean"
          },
          "measureQuerySql": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/MetricDefinitionType"
          },
          "isManualQueryScalar": {
            "type": "boolean"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityDependency"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InternalStateType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "type": "integer",
        "format": "int32"
      },
      "Evaluation": {
        "type": "object",
        "properties": {
          "orchestrationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastSuccessfulRunId": {
            "type": "string",
            "nullable": true
          },
          "internalState": {
            "$ref": "#/components/schemas/InternalStateType"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScalarOutput": {
        "type": "object",
        "properties": {
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "metricName": {
            "type": "string",
            "nullable": true
          },
          "evaluationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EvaluationStats": {
        "type": "object",
        "properties": {
          "lastSuccessful": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "consecutiveFailureCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringErrorInfo": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SqlValidationStats": {
        "type": "object",
        "properties": {
          "validationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/MatricState"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "definition": {
            "$ref": "#/components/schemas/MetricDefinition"
          },
          "latestEvaluation": {
            "$ref": "#/components/schemas/Evaluation"
          },
          "output": {
            "$ref": "#/components/schemas/ScalarOutput"
          },
          "evaluationStats": {
            "$ref": "#/components/schemas/EvaluationStats"
          },
          "errorDescription": {
            "$ref": "#/components/schemas/StringErrorInfo"
          },
          "sqlValidationStats": {
            "$ref": "#/components/schemas/SqlValidationStats"
          },
          "evaluationHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Evaluation"
            },
            "nullable": true
          },
          "outputHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScalarOutput"
            },
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateRefreshed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "lastRunId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricResponse": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/MetricMetadata"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RenameMetricRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationSetting": {
        "type": "object",
        "properties": {
          "privacyId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "privacyCenterDomain": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyPhone": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "privacyContactEmail": {
            "type": "string",
            "nullable": true
          },
          "privacyPolicyUrl": {
            "type": "string",
            "nullable": true
          },
          "termsConditionUrl": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "senderEmail": {
            "type": "string",
            "nullable": true
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "replyToEmail": {
            "type": "string",
            "nullable": true
          },
          "primaryColor": {
            "type": "string",
            "nullable": true
          },
          "secondaryColor": {
            "type": "string",
            "nullable": true
          },
          "approvalsRequired": {
            "type": "boolean"
          },
          "logoPath": {
            "type": "string",
            "nullable": true
          },
          "faviconIconPath": {
            "type": "string",
            "nullable": true
          },
          "mainSiteUrl": {
            "type": "string",
            "nullable": true
          },
          "privacyCenterHeadline": {
            "type": "string",
            "nullable": true
          },
          "privacyCenterSubtitle": {
            "type": "string",
            "nullable": true
          },
          "instrumentationKey": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationSettingResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/OrganizationSetting"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyContent": {
        "type": "object",
        "properties": {
          "htmlContent": {
            "type": "string",
            "nullable": true
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyContentResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PrivacyContent"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataPracticeContent": {
        "type": "object",
        "properties": {
          "htmlContent": {
            "type": "string",
            "nullable": true
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataPracticeResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DataPracticeContent"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AboutUsContent": {
        "type": "object",
        "properties": {
          "htmlContent": {
            "type": "string",
            "nullable": true
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AboutUsResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/AboutUsContent"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyCenterAction": {
        "type": "object",
        "properties": {
          "downloadEnable": {
            "type": "boolean"
          },
          "eraseDataEnable": {
            "type": "boolean"
          },
          "updateInaccuraciesEnable": {
            "type": "boolean"
          },
          "notSellMyDataEnable": {
            "type": "boolean"
          },
          "consentEnable": {
            "type": "boolean"
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyCenterActionResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PrivacyCenterAction"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyCenterAdminAction": {
        "type": "object",
        "properties": {
          "downloadEnable": {
            "type": "boolean"
          },
          "eraseDataEnable": {
            "type": "boolean"
          },
          "updateInaccuraciesEnable": {
            "type": "boolean"
          },
          "notSellMyDataEnable": {
            "type": "boolean"
          },
          "consentEnable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PrivacyCenterAdminActionResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PrivacyCenterAdminAction"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyTabConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "enable": {
            "type": "boolean"
          },
          "editable": {
            "type": "boolean"
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyTabConfigurationResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PrivacyTabConfiguration"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DSROptionConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "responseTime": {
            "type": "integer",
            "format": "int32"
          },
          "isEnable": {
            "type": "boolean"
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DSROptionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "isEnable": {
            "type": "boolean"
          },
          "responseTime": {
            "type": "integer",
            "format": "int32"
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DSROptionConfigurationResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DSROptionConfiguration"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "isEnable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DSRDoNotSellCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "header": {
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "isEnable": {
            "type": "boolean"
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DSRDoNotSellCategoryResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DSRDoNotSellCategory"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryHeaderRequest": {
        "type": "object",
        "properties": {
          "header": {
            "type": "string",
            "nullable": true
          },
          "privacyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DSRConfigureOptionTypeList": {
        "type": "object",
        "properties": {
          "subjectTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DSROptionConfiguration"
            },
            "nullable": true
          },
          "residencyTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DSROptionConfiguration"
            },
            "nullable": true
          },
          "requestTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dsrDoNotSellCategory": {
            "$ref": "#/components/schemas/DSRDoNotSellCategory"
          }
        },
        "additionalProperties": false
      },
      "DataSubjectRequestTypeReport": {
        "type": "object",
        "properties": {
          "requestType": {
            "type": "string",
            "nullable": true
          },
          "inReview": {
            "type": "integer",
            "format": "int32"
          },
          "processing": {
            "type": "integer",
            "format": "int32"
          },
          "consented": {
            "type": "integer",
            "format": "int32"
          },
          "completed": {
            "type": "integer",
            "format": "int32"
          },
          "cancelled": {
            "type": "integer",
            "format": "int32"
          },
          "rejected": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataSubjectRequestReviewReport": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataSubjectRequestReport": {
        "type": "object",
        "properties": {
          "dataSubjectRequestTypeReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataSubjectRequestTypeReport"
            },
            "nullable": true
          },
          "dataSubjectRequestReviewReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataSubjectRequestReviewReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsentReportSummary": {
        "type": "object",
        "properties": {
          "dataProcessingActivityName": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "consented": {
            "type": "integer",
            "format": "int32"
          },
          "objected": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConsentRequestReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dataProcessingActivityName": {
            "type": "string",
            "nullable": true
          },
          "subjectEmail": {
            "type": "string",
            "nullable": true
          },
          "consented": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "date": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsentReport": {
        "type": "object",
        "properties": {
          "consentReportSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentReportSummary"
            },
            "nullable": true
          },
          "consentRequestReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentRequestReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyCenterReport": {
        "type": "object",
        "properties": {
          "numberOfVisitor": {
            "type": "integer",
            "format": "int32"
          },
          "totalEmail": {
            "type": "integer",
            "format": "int32"
          },
          "totalDataSubjectRequest": {
            "type": "integer",
            "format": "int32"
          },
          "totalDownloadRequest": {
            "type": "integer",
            "format": "int32"
          },
          "totalEraseRequest": {
            "type": "integer",
            "format": "int32"
          },
          "totalDoNotSellRequest": {
            "type": "integer",
            "format": "int32"
          },
          "totalUpdateInaccuraciesRequest": {
            "type": "integer",
            "format": "int32"
          },
          "totalConsentRequest": {
            "type": "integer",
            "format": "int32"
          },
          "totalConsented": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PrivacyTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "htmlContent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrivacyTemplateResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PrivacyTemplate"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyFilter": {
        "type": "object",
        "properties": {
          "facetSpecification": {
            "type": "string",
            "nullable": true
          },
          "isFacetable": {
            "type": "boolean"
          },
          "isFilterable": {
            "type": "boolean"
          },
          "isSearchable": {
            "type": "boolean"
          },
          "isSortable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FilterData": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProfileFilter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/PropertyFilter"
          },
          "filterData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProfileSearchResponse": {
        "type": "object",
        "properties": {
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Profile"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "profileFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileFilter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeSearchConfiguration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/PropertyFilter"
          }
        },
        "additionalProperties": false
      },
      "EntitySearchConfiguration": {
        "type": "object",
        "properties": {
          "qualifiedEntityName": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeSearchConfiguration"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProfileSearchConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "entityConfig": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitySearchConfiguration"
            },
            "nullable": true
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time"
          },
          "updatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProfileSearchConfigurationResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProfileSearchConfiguration"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExportSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "subtitle": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "linkText": {
            "type": "string",
            "nullable": true
          },
          "linkUrl": {
            "type": "string",
            "nullable": true
          },
          "iconClass": {
            "type": "string",
            "nullable": true
          },
          "setupEnable": {
            "type": "boolean"
          },
          "externalSetup": {
            "type": "boolean"
          },
          "externalSetupLink": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "kind": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SemanticLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "exactMatchLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SemanticLabelSaveRequest": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstanceSemanticLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SemanticLabelResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InstanceSemanticLabel"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomReplace": {
        "type": "object",
        "properties": {
          "find": {
            "type": "string",
            "nullable": true
          },
          "replace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeNormalizeInformation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "regexPattern": {
            "type": "string",
            "nullable": true
          },
          "regexReplace": {
            "type": "string",
            "nullable": true
          },
          "customReplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomReplace"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MapEntityNormalizeDefaultOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "normalizeOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeNormalizeInformation"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NestedOption": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SelectListItem": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "ignoreCase": {
            "type": "boolean"
          },
          "other": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NestedOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SelectListOptions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "selectListItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatasourceEntityReference": {
        "type": "object",
        "properties": {
          "entityName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "datasourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EntityStichInformation": {
        "type": "object",
        "properties": {
          "entityInformation": {
            "$ref": "#/components/schemas/DatasourceEntityReference"
          },
          "customerAttributeNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "profileAttributeNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isSelfStichEnabled": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "updatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatchedEntityInformation": {
        "type": "object",
        "properties": {
          "entityName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "datasourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "retainUnmatchedPairs": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "primaryKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QualifiedColumnInformation": {
        "type": "object",
        "properties": {
          "entityName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PreprocessingSettings": {
        "type": "object",
        "properties": {
          "sourceAttributeNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MatchingCriteriaMetadata": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "matchType": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "matchTypeLogicalOperation": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "leftColumnInfo": {
            "$ref": "#/components/schemas/QualifiedColumnInformation"
          },
          "rightColumnInfo": {
            "$ref": "#/components/schemas/QualifiedColumnInformation"
          },
          "leftColumnPreprocessing": {
            "$ref": "#/components/schemas/PreprocessingSettings"
          },
          "rightColumnPreprocessing": {
            "$ref": "#/components/schemas/PreprocessingSettings"
          }
        },
        "additionalProperties": false
      },
      "MatchingRuleMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isEvaluationOrderForced": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "criteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchingCriteriaMetadata"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StitchPlanEntryMetadata": {
        "type": "object",
        "properties": {
          "ruleColumnName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "scoreColumnName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchingRuleMetadata"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StitchPlanMetadata": {
        "type": "object",
        "properties": {
          "entityStitchOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchedEntityInformation"
            },
            "nullable": true
          },
          "plan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StitchPlanEntryMetadata"
            },
            "nullable": true
          },
          "updatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastRuleMatchTimeUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastMLMatchTimeUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "confidence": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConflictResolutionPolicyMetadata": {
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeDisplayName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mlLabel": {
            "type": "string",
            "nullable": true
          },
          "policyType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualifiedColumnInformation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConflictResolutionEntityMetadata": {
        "type": "object",
        "properties": {
          "stitchedEntityName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "stitchedEntityId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "sourceColumnName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConflictResolutionPolicyMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConflictResolutionMetadata": {
        "type": "object",
        "properties": {
          "stitchedEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConflictResolutionEntityMetadata"
            },
            "nullable": true,
            "readOnly": true
          },
          "updatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastMergeTimeUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StitchPreviewValue": {
        "type": "object",
        "properties": {
          "l": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          },
          "r": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StitchPreviewValues": {
        "type": "object",
        "properties": {
          "scoreUpperBound": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "previewValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StitchPreviewValue"
            },
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StitchCriteriaDiagnosticInfo": {
        "type": "object",
        "properties": {
          "leftAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "rightAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "selectedThresholdIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "buckets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StitchPreviewValues"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StitchRun": {
        "type": "object",
        "properties": {
          "stitchId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "stitchPlanVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "stitchRunId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "sourceEntitySizes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true,
            "readOnly": true
          },
          "finalInfo": {
            "$ref": "#/components/schemas/StitchCriteriaDiagnosticInfo"
          },
          "startTimeUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "endDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "instanceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StitchMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "entityStitchInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityStichInformation"
            },
            "nullable": true
          },
          "stitchPlan": {
            "$ref": "#/components/schemas/StitchPlanMetadata"
          },
          "conflictResolution": {
            "$ref": "#/components/schemas/ConflictResolutionMetadata"
          },
          "mustMatchListEntityName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "neverMatchListEntityName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "stitchRun": {
            "$ref": "#/components/schemas/StitchRun"
          },
          "mapLastRunId": {
            "type": "string",
            "nullable": true
          },
          "ruleMatchLastRunId": {
            "type": "string",
            "nullable": true
          },
          "mlMatchLastRunId": {
            "type": "string",
            "nullable": true
          },
          "stitchLastRunId": {
            "type": "string",
            "nullable": true
          },
          "mergeMatchType": {
            "type": "string",
            "nullable": true
          },
          "mlMatchIncrementalActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StitchResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/StitchMetadata"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StitchPreviewValueV2": {
        "type": "object",
        "properties": {
          "l": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "r": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "score": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StitchPreviewValuesV2": {
        "type": "object",
        "properties": {
          "scoreUpperBound": {
            "type": "number",
            "format": "double"
          },
          "previewValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StitchPreviewValueV2"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StitchPreview": {
        "type": "object",
        "properties": {
          "leftAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "rightAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "scoreAttribute": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StitchPreviewValuesV2"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CriteriaStatistics": {
        "type": "object",
        "properties": {
          "criteriaId": {
            "type": "integer",
            "format": "int32"
          },
          "matchedRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "preview": {
            "$ref": "#/components/schemas/StitchPreview"
          }
        },
        "additionalProperties": false
      },
      "RuleStatistics": {
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "integer",
            "format": "int32"
          },
          "ruleName": {
            "type": "string",
            "nullable": true
          },
          "matchedRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "preview": {
            "$ref": "#/components/schemas/StitchPreview"
          },
          "criteriaStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteriaStatistics"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MLConflictResolution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "conflictResolution": {
            "$ref": "#/components/schemas/ConflictResolutionMetadata"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "mlMergeLastRunId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStitchEntityRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityInformationAttribute": {
        "type": "object",
        "properties": {
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "primaryKey": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "semanticLabels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeSemanticInformation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MapEntityNormalizeInfoRequest": {
        "type": "object",
        "properties": {
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "normalizeInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeNormalizeInformation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStitchAttributeRequest": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityInformationAttribute"
            },
            "nullable": true
          },
          "mapEntityNormalizeInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapEntityNormalizeInfoRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MapEntityNormalizeInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "normalizeInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeNormalizeInformation"
            },
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SemanticLabelCriteria": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "isExactMatch": {
            "type": "boolean",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SemanticLabelCriteriaHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "semanticLabelCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SemanticLabelCriteria"
            },
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "stitchId": {
            "type": "string",
            "format": "uuid"
          },
          "runId": {
            "type": "string",
            "nullable": true
          },
          "runDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "StitchPlanRequest": {
        "type": "object",
        "properties": {
          "stitchPlan": {
            "$ref": "#/components/schemas/StitchPlanMetadata"
          },
          "semanticLabelCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SemanticLabelCriteria"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MLConflictResolutionResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MLConflictResolution"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RunResponse": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EntityStatistics": {
        "type": "object",
        "properties": {
          "dataSourceId": {
            "type": "string",
            "format": "uuid"
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "uniqueRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "matchedRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "ruleStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleStatistics"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18
        ],
        "type": "integer",
        "format": "int32"
      },
      "StitchStatistics": {
        "type": "object",
        "properties": {
          "stitchId": {
            "type": "string",
            "format": "uuid"
          },
          "stitchRunId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "matchedRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "matchCount": {
            "type": "integer",
            "format": "int32"
          },
          "unmatchedRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "entityStatistics": {
            "type": "string",
            "nullable": true
          },
          "entityStatisticsMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityStatistics"
            },
            "nullable": true
          },
          "matchType": {
            "$ref": "#/components/schemas/WorkflowType"
          }
        },
        "additionalProperties": false
      },
      "TenantRequest": {
        "required": [
          "businessName"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string"
          },
          "websiteUrl": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Tenantflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeTenantId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "detailedDescription": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantflowPagedData": {
        "type": "object",
        "properties": {
          "tenantflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tenantflow"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TenantRegisterRequest": {
        "required": [
          "email",
          "objectId"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TenantRegisterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SkyPointUserSignupRequest": {
        "required": [
          "companyName",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GenericResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InviteUserRequest": {
        "required": [
          "instanceId",
          "invitedBy",
          "inviteEmail",
          "userRole"
        ],
        "type": "object",
        "properties": {
          "inviteId": {
            "type": "string",
            "format": "uuid"
          },
          "inviteEmail": {
            "type": "string"
          },
          "invitedBy": {
            "type": "string",
            "format": "uuid"
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "userRole": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "InvitedUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "invitationAccepted": {
            "type": "boolean"
          },
          "invitationLink": {
            "type": "string",
            "nullable": true
          },
          "invitedBy": {
            "type": "string",
            "format": "uuid"
          },
          "userRole": {
            "type": "string",
            "format": "uuid"
          },
          "sentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "acceptDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JoinTenantRequest": {
        "required": [
          "instanceId",
          "invitedBy",
          "inviteId",
          "objectId",
          "tenantId",
          "userRole"
        ],
        "type": "object",
        "properties": {
          "inviteId": {
            "type": "string",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "invitedBy": {
            "type": "string",
            "format": "uuid"
          },
          "userRole": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "TenantDefault": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountKey": {
            "type": "string",
            "nullable": true
          },
          "containerName": {
            "type": "string",
            "nullable": true
          },
          "searchServiceName": {
            "type": "string",
            "nullable": true
          },
          "searchServiceAdminKey": {
            "type": "string",
            "nullable": true
          },
          "isSkyPointDefaultSettings": {
            "type": "boolean"
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "tenantWebsiteUrl": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "databricksADLSGen2AppTenantId": {
            "type": "string",
            "nullable": true
          },
          "databricksADLSGen2AppId": {
            "type": "string",
            "nullable": true
          },
          "databricksADLSGen2AppSecret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantDefaultResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TenantDefault"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerificationCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "expiry": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserInstance": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "securityGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "securityGroupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserTenants": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "isTenantAdmin": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "verificationCode": {
            "$ref": "#/components/schemas/VerificationCode"
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInstance"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "isPlatformAdmin": {
            "type": "boolean"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "securityGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityGroup"
            },
            "nullable": true
          },
          "userTenants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTenants"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimelineTimeType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "DurationUnitType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "UnifiedTimelineMappingMetadata": {
        "type": "object",
        "properties": {
          "mappingId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "keyAttributeField": {
            "type": "string",
            "nullable": true
          },
          "titleField": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "startTimeField": {
            "type": "string",
            "nullable": true
          },
          "endTimeField": {
            "type": "string",
            "nullable": true
          },
          "timelineTime": {
            "$ref": "#/components/schemas/TimelineTimeType"
          },
          "durationField": {
            "type": "string",
            "nullable": true
          },
          "durationUnit": {
            "$ref": "#/components/schemas/DurationUnitType"
          },
          "iconCode": {
            "type": "string",
            "nullable": true
          },
          "imageURL": {
            "type": "string",
            "nullable": true
          },
          "timelineNameField": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnifiedTimelineMappingGroupMetadata": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "entityMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnifiedTimelineMappingMetadata"
            },
            "nullable": true
          },
          "lastRunId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimelineResponse": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/UnifiedTimelineMappingGroupMetadata"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterResult": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnifiedTimeline": {
        "type": "object",
        "properties": {
          "timelineId": {
            "type": "string",
            "nullable": true
          },
          "timelineName": {
            "type": "string",
            "nullable": true
          },
          "timelineTime": {
            "type": "string",
            "nullable": true
          },
          "timelineType": {
            "type": "string",
            "nullable": true
          },
          "timelineTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "actualTimelineId": {
            "type": "string",
            "nullable": true
          },
          "skypointId": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "nullable": true
          },
          "durationUnit": {
            "type": "string",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "nullable": true
          },
          "iconCode": {
            "type": "string",
            "nullable": true
          },
          "imageURL": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentSearchResult": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "timelineDisplayTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "unifiedTimelines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnifiedTimeline"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRequest": {
        "required": [
          "objectId"
        ],
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GenericInstanceResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "additionalProperties": false
      },
      "InstanceValidationRequest": {
        "required": [
          "instanceId",
          "objectId"
        ],
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "InstanceValidationResponse": {
        "type": "object",
        "properties": {
          "isValidInstace": {
            "type": "boolean"
          },
          "hasAccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "additionalProperties": false
      },
      "UserSignupRequest": {
        "required": [
          "companyName",
          "email",
          "firstName",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyEmailRequest": {
        "required": [
          "code",
          "email",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ActivationUserRequest": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddUserRequest": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddUserResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RemoveUserRequest": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "RemoveUserResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityGroupCount": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Notification": {
        "type": "object",
        "properties": {
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateNotificationRequest": {
        "required": [
          "events",
          "url"
        ],
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "RunHistory": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "runId": {
            "type": "string",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "format": "int64"
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "detailedDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RunHistoryResponse": {
        "type": "object",
        "properties": {
          "runHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RunHistory"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AzureFunctionInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "documentTypeInstanceId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "instanceId": {
            "type": "string",
            "format": "uuid"
          },
          "runId": {
            "type": "string",
            "nullable": true
          },
          "azureFunctionInstanceId": {
            "type": "string",
            "nullable": true
          },
          "statusQueryGetUri": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "sendEventPostUri": {
            "type": "string",
            "nullable": true
          },
          "terminatePostUri": {
            "type": "string",
            "nullable": true
          },
          "purgeHistoryDeleteUri": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "description": "B2C authentication",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://sicdpstage.b2clogin.com/sicdpstage.onmicrosoft.com/oauth2/v2.0/authorize?p=B2C_1A_signup_signin",
            "tokenUrl": "https://sicdpstage.b2clogin.com/sicdpstage.onmicrosoft.com/oauth2/v2.0/token?p=B2C_1A_signup_signin",
            "scopes": {
              "https://sicdpstage.onmicrosoft.com/api/read_write": "Read Write Access"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}